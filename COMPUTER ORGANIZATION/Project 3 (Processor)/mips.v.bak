module mips(input clock);

reg [31:0] pc;
reg [31:0] instruction;
reg byteOperations;

initial begin
    pc = 32'b0;
end

instruction_block instruction_block(
    .instruction(instruction),
    .pc(pc)
);

// now we should decode the intruction
wire [5:0] opcode;
wire [4:0] rs;
wire [4:0] rt;
wire [4:0] rd;
wire [5:0] funct;
wire [15:0] immediate;
wire [25:0] address;

assign opcode = instruction[31:26];
assign rs = instruction[25:21];
assign rt = instruction[20:16];
assign rd = instruction[15:11];
assign funct = instruction[5:0];
assign immediate = instruction[15:0];
assign address = instruction[25:0];

wire regDst;
wire branch;
wire memRead;
wire 


endmodule
