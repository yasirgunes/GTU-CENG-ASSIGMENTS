|mips
clock => pc[0].CLK
clock => pc[1].CLK
clock => pc[2].CLK
clock => pc[3].CLK
clock => pc[4].CLK
clock => pc[5].CLK
clock => pc[6].CLK
clock => pc[7].CLK
clock => pc[8].CLK
clock => pc[9].CLK
clock => pc[10].CLK
clock => pc[11].CLK
clock => pc[12].CLK
clock => pc[13].CLK
clock => pc[14].CLK
clock => pc[15].CLK
clock => pc[16].CLK
clock => pc[17].CLK
clock => pc[18].CLK
clock => pc[19].CLK
clock => pc[20].CLK
clock => pc[21].CLK
clock => pc[22].CLK
clock => pc[23].CLK
clock => pc[24].CLK
clock => pc[25].CLK
clock => pc[26].CLK
clock => pc[27].CLK
clock => pc[28].CLK
clock => pc[29].CLK
clock => pc[30].CLK
clock => pc[31].CLK


|mips|instruction_block:instruction_block
instruction[0] <= instructions.DATAOUT
instruction[1] <= instructions.DATAOUT1
instruction[2] <= instructions.DATAOUT2
instruction[3] <= instructions.DATAOUT3
instruction[4] <= instructions.DATAOUT4
instruction[5] <= instructions.DATAOUT5
instruction[6] <= instructions.DATAOUT6
instruction[7] <= instructions.DATAOUT7
instruction[8] <= instructions.DATAOUT8
instruction[9] <= instructions.DATAOUT9
instruction[10] <= instructions.DATAOUT10
instruction[11] <= instructions.DATAOUT11
instruction[12] <= instructions.DATAOUT12
instruction[13] <= instructions.DATAOUT13
instruction[14] <= instructions.DATAOUT14
instruction[15] <= instructions.DATAOUT15
instruction[16] <= instructions.DATAOUT16
instruction[17] <= instructions.DATAOUT17
instruction[18] <= instructions.DATAOUT18
instruction[19] <= instructions.DATAOUT19
instruction[20] <= instructions.DATAOUT20
instruction[21] <= instructions.DATAOUT21
instruction[22] <= instructions.DATAOUT22
instruction[23] <= instructions.DATAOUT23
instruction[24] <= instructions.DATAOUT24
instruction[25] <= instructions.DATAOUT25
instruction[26] <= instructions.DATAOUT26
instruction[27] <= instructions.DATAOUT27
instruction[28] <= instructions.DATAOUT28
instruction[29] <= instructions.DATAOUT29
instruction[30] <= instructions.DATAOUT30
instruction[31] <= instructions.DATAOUT31
pc[0] => instructions.RADDR
pc[1] => instructions.RADDR1
pc[2] => instructions.RADDR2
pc[3] => instructions.RADDR3
pc[4] => instructions.RADDR4
pc[5] => instructions.RADDR5
pc[6] => instructions.RADDR6
pc[7] => instructions.RADDR7
pc[8] => ~NO_FANOUT~
pc[9] => ~NO_FANOUT~
pc[10] => ~NO_FANOUT~
pc[11] => ~NO_FANOUT~
pc[12] => ~NO_FANOUT~
pc[13] => ~NO_FANOUT~
pc[14] => ~NO_FANOUT~
pc[15] => ~NO_FANOUT~
pc[16] => ~NO_FANOUT~
pc[17] => ~NO_FANOUT~
pc[18] => ~NO_FANOUT~
pc[19] => ~NO_FANOUT~
pc[20] => ~NO_FANOUT~
pc[21] => ~NO_FANOUT~
pc[22] => ~NO_FANOUT~
pc[23] => ~NO_FANOUT~
pc[24] => ~NO_FANOUT~
pc[25] => ~NO_FANOUT~
pc[26] => ~NO_FANOUT~
pc[27] => ~NO_FANOUT~
pc[28] => ~NO_FANOUT~
pc[29] => ~NO_FANOUT~
pc[30] => ~NO_FANOUT~
pc[31] => ~NO_FANOUT~


|mips|sign_extend:sign_extend0
sign_ext_imm[0] <= imm[0].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[1] <= imm[1].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[2] <= imm[2].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[3] <= imm[3].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[4] <= imm[4].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[5] <= imm[5].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[6] <= imm[6].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[7] <= imm[7].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[8] <= imm[8].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[9] <= imm[9].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[10] <= imm[10].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[11] <= imm[11].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[12] <= imm[12].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[13] <= imm[13].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[14] <= imm[14].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[15] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[16] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[17] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[18] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[19] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[20] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[21] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[22] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[23] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[24] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[25] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[26] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[27] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[28] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[29] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[30] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
sign_ext_imm[31] <= imm[15].DB_MAX_OUTPUT_PORT_TYPE
imm[0] => sign_ext_imm[0].DATAIN
imm[1] => sign_ext_imm[1].DATAIN
imm[2] => sign_ext_imm[2].DATAIN
imm[3] => sign_ext_imm[3].DATAIN
imm[4] => sign_ext_imm[4].DATAIN
imm[5] => sign_ext_imm[5].DATAIN
imm[6] => sign_ext_imm[6].DATAIN
imm[7] => sign_ext_imm[7].DATAIN
imm[8] => sign_ext_imm[8].DATAIN
imm[9] => sign_ext_imm[9].DATAIN
imm[10] => sign_ext_imm[10].DATAIN
imm[11] => sign_ext_imm[11].DATAIN
imm[12] => sign_ext_imm[12].DATAIN
imm[13] => sign_ext_imm[13].DATAIN
imm[14] => sign_ext_imm[14].DATAIN
imm[15] => sign_ext_imm[15].DATAIN
imm[15] => sign_ext_imm[16].DATAIN
imm[15] => sign_ext_imm[17].DATAIN
imm[15] => sign_ext_imm[18].DATAIN
imm[15] => sign_ext_imm[19].DATAIN
imm[15] => sign_ext_imm[20].DATAIN
imm[15] => sign_ext_imm[21].DATAIN
imm[15] => sign_ext_imm[22].DATAIN
imm[15] => sign_ext_imm[23].DATAIN
imm[15] => sign_ext_imm[24].DATAIN
imm[15] => sign_ext_imm[25].DATAIN
imm[15] => sign_ext_imm[26].DATAIN
imm[15] => sign_ext_imm[27].DATAIN
imm[15] => sign_ext_imm[28].DATAIN
imm[15] => sign_ext_imm[29].DATAIN
imm[15] => sign_ext_imm[30].DATAIN
imm[15] => sign_ext_imm[31].DATAIN


|mips|control_unit:control_unit0
regDst <= and15.DB_MAX_OUTPUT_PORT_TYPE
branch <= or2.DB_MAX_OUTPUT_PORT_TYPE
memRead <= or3.DB_MAX_OUTPUT_PORT_TYPE
memWrite <= or4.DB_MAX_OUTPUT_PORT_TYPE
ALUop[0] <= or9.DB_MAX_OUTPUT_PORT_TYPE
ALUop[1] <= or10.DB_MAX_OUTPUT_PORT_TYPE
ALUop[2] <= or11.DB_MAX_OUTPUT_PORT_TYPE
ALUsrc <= or5.DB_MAX_OUTPUT_PORT_TYPE
regWrite <= or6.DB_MAX_OUTPUT_PORT_TYPE
jump <= and2.DB_MAX_OUTPUT_PORT_TYPE
byteOperations <= or7.DB_MAX_OUTPUT_PORT_TYPE
move <= or8.DB_MAX_OUTPUT_PORT_TYPE
opcode[0] => and4.IN0
opcode[0] => and6.IN0
opcode[0] => and9.IN0
opcode[0] => and10.IN0
opcode[0] => and11.IN0
opcode[0] => and12.IN0
opcode[0] => and13.IN0
opcode[0] => and16.IN0
opcode[0] => and1.IN0
opcode[0] => and3.IN0
opcode[0] => and5.IN0
opcode[0] => and7.IN0
opcode[0] => and8.IN0
opcode[0] => and14.IN0
opcode[1] => and3.IN1
opcode[1] => and4.IN1
opcode[1] => and11.IN1
opcode[1] => and12.IN1
opcode[1] => and13.IN1
opcode[1] => and1.IN1
opcode[1] => and2.IN0
opcode[1] => and5.IN1
opcode[1] => and6.IN1
opcode[1] => and7.IN1
opcode[1] => and8.IN1
opcode[1] => and9.IN1
opcode[1] => and10.IN1
opcode[1] => and14.IN1
opcode[1] => and16.IN1
opcode[2] => and5.IN2
opcode[2] => and6.IN2
opcode[2] => and11.IN2
opcode[2] => and13.IN2
opcode[2] => and1.IN2
opcode[2] => and2.IN1
opcode[2] => and3.IN2
opcode[2] => and4.IN2
opcode[2] => and7.IN2
opcode[2] => and8.IN2
opcode[2] => and9.IN2
opcode[2] => and10.IN2
opcode[2] => and12.IN2
opcode[2] => and14.IN2
opcode[2] => and16.IN2
opcode[3] => and2.IN2
opcode[3] => and7.IN3
opcode[3] => and9.IN3
opcode[3] => and16.IN3
opcode[3] => and1.IN3
opcode[3] => and3.IN3
opcode[3] => and4.IN3
opcode[3] => and5.IN3
opcode[3] => and6.IN3
opcode[3] => and8.IN3
opcode[3] => and10.IN3
opcode[3] => and11.IN3
opcode[3] => and12.IN3
opcode[3] => and13.IN3
opcode[3] => and14.IN3
opcode[4] => and2.IN3
opcode[4] => and8.IN4
opcode[4] => and10.IN4
opcode[4] => and16.IN4
opcode[4] => and1.IN4
opcode[4] => and3.IN4
opcode[4] => and4.IN4
opcode[4] => and5.IN4
opcode[4] => and6.IN4
opcode[4] => and7.IN4
opcode[4] => and9.IN4
opcode[4] => and11.IN4
opcode[4] => and12.IN4
opcode[4] => and13.IN4
opcode[4] => and14.IN4
opcode[5] => and2.IN4
opcode[5] => and12.IN5
opcode[5] => and13.IN5
opcode[5] => and14.IN5
opcode[5] => and16.IN5
opcode[5] => and1.IN5
opcode[5] => and3.IN5
opcode[5] => and4.IN5
opcode[5] => and5.IN5
opcode[5] => and6.IN5
opcode[5] => and7.IN5
opcode[5] => and8.IN5
opcode[5] => and9.IN5
opcode[5] => and10.IN5
opcode[5] => and11.IN5


|mips|mux_2x1_5bit:mux1
result[0] <= or1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= or2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= or3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= or4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= or5.DB_MAX_OUTPUT_PORT_TYPE
input0[0] => and1.IN0
input0[1] => and2.IN0
input0[2] => and3.IN0
input0[3] => and4.IN0
input0[4] => and5.IN0
input1[0] => and6.IN0
input1[1] => and7.IN0
input1[2] => and8.IN0
input1[3] => and9.IN0
input1[4] => and10.IN0
sel => and6.IN1
sel => and7.IN1
sel => and8.IN1
sel => and9.IN1
sel => and10.IN1
sel => and1.IN1
sel => and2.IN1
sel => and3.IN1
sel => and4.IN1
sel => and5.IN1


|mips|mux_2x1_5bit:mux2
result[0] <= or1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= or2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= or3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= or4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= or5.DB_MAX_OUTPUT_PORT_TYPE
input0[0] => and1.IN0
input0[1] => and2.IN0
input0[2] => and3.IN0
input0[3] => and4.IN0
input0[4] => and5.IN0
input1[0] => and6.IN0
input1[1] => and7.IN0
input1[2] => and8.IN0
input1[3] => and9.IN0
input1[4] => and10.IN0
sel => and6.IN1
sel => and7.IN1
sel => and8.IN1
sel => and9.IN1
sel => and10.IN1
sel => and1.IN1
sel => and2.IN1
sel => and3.IN1
sel => and4.IN1
sel => and5.IN1


|mips|register_block:register_block0
read_data1[0] <= registers.DATAOUT
read_data1[1] <= registers.DATAOUT1
read_data1[2] <= registers.DATAOUT2
read_data1[3] <= registers.DATAOUT3
read_data1[4] <= registers.DATAOUT4
read_data1[5] <= registers.DATAOUT5
read_data1[6] <= registers.DATAOUT6
read_data1[7] <= registers.DATAOUT7
read_data1[8] <= registers.DATAOUT8
read_data1[9] <= registers.DATAOUT9
read_data1[10] <= registers.DATAOUT10
read_data1[11] <= registers.DATAOUT11
read_data1[12] <= registers.DATAOUT12
read_data1[13] <= registers.DATAOUT13
read_data1[14] <= registers.DATAOUT14
read_data1[15] <= registers.DATAOUT15
read_data1[16] <= registers.DATAOUT16
read_data1[17] <= registers.DATAOUT17
read_data1[18] <= registers.DATAOUT18
read_data1[19] <= registers.DATAOUT19
read_data1[20] <= registers.DATAOUT20
read_data1[21] <= registers.DATAOUT21
read_data1[22] <= registers.DATAOUT22
read_data1[23] <= registers.DATAOUT23
read_data1[24] <= registers.DATAOUT24
read_data1[25] <= registers.DATAOUT25
read_data1[26] <= registers.DATAOUT26
read_data1[27] <= registers.DATAOUT27
read_data1[28] <= registers.DATAOUT28
read_data1[29] <= registers.DATAOUT29
read_data1[30] <= registers.DATAOUT30
read_data1[31] <= registers.DATAOUT31
read_data2[0] <= registers.PORTBDATAOUT
read_data2[1] <= registers.PORTBDATAOUT1
read_data2[2] <= registers.PORTBDATAOUT2
read_data2[3] <= registers.PORTBDATAOUT3
read_data2[4] <= registers.PORTBDATAOUT4
read_data2[5] <= registers.PORTBDATAOUT5
read_data2[6] <= registers.PORTBDATAOUT6
read_data2[7] <= registers.PORTBDATAOUT7
read_data2[8] <= registers.PORTBDATAOUT8
read_data2[9] <= registers.PORTBDATAOUT9
read_data2[10] <= registers.PORTBDATAOUT10
read_data2[11] <= registers.PORTBDATAOUT11
read_data2[12] <= registers.PORTBDATAOUT12
read_data2[13] <= registers.PORTBDATAOUT13
read_data2[14] <= registers.PORTBDATAOUT14
read_data2[15] <= registers.PORTBDATAOUT15
read_data2[16] <= registers.PORTBDATAOUT16
read_data2[17] <= registers.PORTBDATAOUT17
read_data2[18] <= registers.PORTBDATAOUT18
read_data2[19] <= registers.PORTBDATAOUT19
read_data2[20] <= registers.PORTBDATAOUT20
read_data2[21] <= registers.PORTBDATAOUT21
read_data2[22] <= registers.PORTBDATAOUT22
read_data2[23] <= registers.PORTBDATAOUT23
read_data2[24] <= registers.PORTBDATAOUT24
read_data2[25] <= registers.PORTBDATAOUT25
read_data2[26] <= registers.PORTBDATAOUT26
read_data2[27] <= registers.PORTBDATAOUT27
read_data2[28] <= registers.PORTBDATAOUT28
read_data2[29] <= registers.PORTBDATAOUT29
read_data2[30] <= registers.PORTBDATAOUT30
read_data2[31] <= registers.PORTBDATAOUT31
byteOperations => ~NO_FANOUT~
write_data[0] => registers.DATAIN
write_data[1] => registers.DATAIN1
write_data[2] => registers.DATAIN2
write_data[3] => registers.DATAIN3
write_data[4] => registers.DATAIN4
write_data[5] => registers.DATAIN5
write_data[6] => registers.DATAIN6
write_data[7] => registers.DATAIN7
write_data[8] => registers.DATAIN8
write_data[9] => registers.DATAIN9
write_data[10] => registers.DATAIN10
write_data[11] => registers.DATAIN11
write_data[12] => registers.DATAIN12
write_data[13] => registers.DATAIN13
write_data[14] => registers.DATAIN14
write_data[15] => registers.DATAIN15
write_data[16] => registers.DATAIN16
write_data[17] => registers.DATAIN17
write_data[18] => registers.DATAIN18
write_data[19] => registers.DATAIN19
write_data[20] => registers.DATAIN20
write_data[21] => registers.DATAIN21
write_data[22] => registers.DATAIN22
write_data[23] => registers.DATAIN23
write_data[24] => registers.DATAIN24
write_data[25] => registers.DATAIN25
write_data[26] => registers.DATAIN26
write_data[27] => registers.DATAIN27
write_data[28] => registers.DATAIN28
write_data[29] => registers.DATAIN29
write_data[30] => registers.DATAIN30
write_data[31] => registers.DATAIN31
read_reg1[0] => registers.RADDR
read_reg1[1] => registers.RADDR1
read_reg1[2] => registers.RADDR2
read_reg1[3] => registers.RADDR3
read_reg1[4] => registers.RADDR4
read_reg2[0] => registers.PORTBRADDR
read_reg2[1] => registers.PORTBRADDR1
read_reg2[2] => registers.PORTBRADDR2
read_reg2[3] => registers.PORTBRADDR3
read_reg2[4] => registers.PORTBRADDR4
write_reg[0] => registers.WADDR
write_reg[1] => registers.WADDR1
write_reg[2] => registers.WADDR2
write_reg[3] => registers.WADDR3
write_reg[4] => registers.WADDR4
regWrite => registers.WE


|mips|mux_2x1_32bit:mux3
result[0] <= or_32bit:or0.port0
result[1] <= or_32bit:or0.port0
result[2] <= or_32bit:or0.port0
result[3] <= or_32bit:or0.port0
result[4] <= or_32bit:or0.port0
result[5] <= or_32bit:or0.port0
result[6] <= or_32bit:or0.port0
result[7] <= or_32bit:or0.port0
result[8] <= or_32bit:or0.port0
result[9] <= or_32bit:or0.port0
result[10] <= or_32bit:or0.port0
result[11] <= or_32bit:or0.port0
result[12] <= or_32bit:or0.port0
result[13] <= or_32bit:or0.port0
result[14] <= or_32bit:or0.port0
result[15] <= or_32bit:or0.port0
result[16] <= or_32bit:or0.port0
result[17] <= or_32bit:or0.port0
result[18] <= or_32bit:or0.port0
result[19] <= or_32bit:or0.port0
result[20] <= or_32bit:or0.port0
result[21] <= or_32bit:or0.port0
result[22] <= or_32bit:or0.port0
result[23] <= or_32bit:or0.port0
result[24] <= or_32bit:or0.port0
result[25] <= or_32bit:or0.port0
result[26] <= or_32bit:or0.port0
result[27] <= or_32bit:or0.port0
result[28] <= or_32bit:or0.port0
result[29] <= or_32bit:or0.port0
result[30] <= or_32bit:or0.port0
result[31] <= or_32bit:or0.port0
input0[0] => input0[0].IN1
input0[1] => input0[1].IN1
input0[2] => input0[2].IN1
input0[3] => input0[3].IN1
input0[4] => input0[4].IN1
input0[5] => input0[5].IN1
input0[6] => input0[6].IN1
input0[7] => input0[7].IN1
input0[8] => input0[8].IN1
input0[9] => input0[9].IN1
input0[10] => input0[10].IN1
input0[11] => input0[11].IN1
input0[12] => input0[12].IN1
input0[13] => input0[13].IN1
input0[14] => input0[14].IN1
input0[15] => input0[15].IN1
input0[16] => input0[16].IN1
input0[17] => input0[17].IN1
input0[18] => input0[18].IN1
input0[19] => input0[19].IN1
input0[20] => input0[20].IN1
input0[21] => input0[21].IN1
input0[22] => input0[22].IN1
input0[23] => input0[23].IN1
input0[24] => input0[24].IN1
input0[25] => input0[25].IN1
input0[26] => input0[26].IN1
input0[27] => input0[27].IN1
input0[28] => input0[28].IN1
input0[29] => input0[29].IN1
input0[30] => input0[30].IN1
input0[31] => input0[31].IN1
input1[0] => input1[0].IN1
input1[1] => input1[1].IN1
input1[2] => input1[2].IN1
input1[3] => input1[3].IN1
input1[4] => input1[4].IN1
input1[5] => input1[5].IN1
input1[6] => input1[6].IN1
input1[7] => input1[7].IN1
input1[8] => input1[8].IN1
input1[9] => input1[9].IN1
input1[10] => input1[10].IN1
input1[11] => input1[11].IN1
input1[12] => input1[12].IN1
input1[13] => input1[13].IN1
input1[14] => input1[14].IN1
input1[15] => input1[15].IN1
input1[16] => input1[16].IN1
input1[17] => input1[17].IN1
input1[18] => input1[18].IN1
input1[19] => input1[19].IN1
input1[20] => input1[20].IN1
input1[21] => input1[21].IN1
input1[22] => input1[22].IN1
input1[23] => input1[23].IN1
input1[24] => input1[24].IN1
input1[25] => input1[25].IN1
input1[26] => input1[26].IN1
input1[27] => input1[27].IN1
input1[28] => input1[28].IN1
input1[29] => input1[29].IN1
input1[30] => input1[30].IN1
input1[31] => input1[31].IN1
sel => sel.IN1


|mips|mux_2x1_32bit:mux3|extend_to_32:extend0
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux3|extend_to_32:extend1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux3|and_32bit:and0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|and_32bit:and1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux3|or_32bit:or0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu_control:alu_control0
alu_ctr[0] <= or1.DB_MAX_OUTPUT_PORT_TYPE
alu_ctr[1] <= or2.DB_MAX_OUTPUT_PORT_TYPE
alu_ctr[2] <= or3.DB_MAX_OUTPUT_PORT_TYPE
function_code[0] => and9.IN1
function_code[0] => and10.IN1
function_code[0] => and12.IN1
function_code[0] => and13.IN1
function_code[0] => and8.IN1
function_code[0] => and11.IN1
function_code[1] => and8.IN2
function_code[1] => and10.IN2
function_code[1] => and11.IN2
function_code[1] => and12.IN2
function_code[1] => and13.IN2
function_code[1] => and9.IN2
function_code[2] => and9.IN3
function_code[2] => and13.IN3
function_code[2] => and8.IN3
function_code[2] => and10.IN3
function_code[2] => and11.IN3
function_code[2] => and12.IN3
function_code[3] => and8.IN4
function_code[3] => and9.IN4
function_code[3] => and10.IN4
function_code[3] => and11.IN4
function_code[3] => and12.IN4
function_code[3] => and13.IN4
function_code[4] => and8.IN5
function_code[4] => and9.IN5
function_code[4] => and10.IN5
function_code[4] => and11.IN5
function_code[4] => and12.IN5
function_code[4] => and13.IN5
function_code[5] => and8.IN6
function_code[5] => and9.IN6
function_code[5] => and10.IN6
function_code[5] => and11.IN6
function_code[5] => and12.IN6
function_code[5] => and13.IN6
ALUop[0] => and7.IN0
ALUop[0] => and14.IN1
ALUop[1] => and7.IN1
ALUop[1] => and15.IN1
ALUop[2] => and7.IN2
ALUop[2] => and16.IN1


|mips|alu:alu0
alu_result[0] <= mux_8x1_32bit:mux1.port0
alu_result[1] <= mux_8x1_32bit:mux1.port0
alu_result[2] <= mux_8x1_32bit:mux1.port0
alu_result[3] <= mux_8x1_32bit:mux1.port0
alu_result[4] <= mux_8x1_32bit:mux1.port0
alu_result[5] <= mux_8x1_32bit:mux1.port0
alu_result[6] <= mux_8x1_32bit:mux1.port0
alu_result[7] <= mux_8x1_32bit:mux1.port0
alu_result[8] <= mux_8x1_32bit:mux1.port0
alu_result[9] <= mux_8x1_32bit:mux1.port0
alu_result[10] <= mux_8x1_32bit:mux1.port0
alu_result[11] <= mux_8x1_32bit:mux1.port0
alu_result[12] <= mux_8x1_32bit:mux1.port0
alu_result[13] <= mux_8x1_32bit:mux1.port0
alu_result[14] <= mux_8x1_32bit:mux1.port0
alu_result[15] <= mux_8x1_32bit:mux1.port0
alu_result[16] <= mux_8x1_32bit:mux1.port0
alu_result[17] <= mux_8x1_32bit:mux1.port0
alu_result[18] <= mux_8x1_32bit:mux1.port0
alu_result[19] <= mux_8x1_32bit:mux1.port0
alu_result[20] <= mux_8x1_32bit:mux1.port0
alu_result[21] <= mux_8x1_32bit:mux1.port0
alu_result[22] <= mux_8x1_32bit:mux1.port0
alu_result[23] <= mux_8x1_32bit:mux1.port0
alu_result[24] <= mux_8x1_32bit:mux1.port0
alu_result[25] <= mux_8x1_32bit:mux1.port0
alu_result[26] <= mux_8x1_32bit:mux1.port0
alu_result[27] <= mux_8x1_32bit:mux1.port0
alu_result[28] <= mux_8x1_32bit:mux1.port0
alu_result[29] <= mux_8x1_32bit:mux1.port0
alu_result[30] <= mux_8x1_32bit:mux1.port0
alu_result[31] <= mux_8x1_32bit:mux1.port0
zero_bit <= nor1.DB_MAX_OUTPUT_PORT_TYPE
alu_src1[0] => alu_src1[0].IN5
alu_src1[1] => alu_src1[1].IN5
alu_src1[2] => alu_src1[2].IN5
alu_src1[3] => alu_src1[3].IN5
alu_src1[4] => alu_src1[4].IN5
alu_src1[5] => alu_src1[5].IN5
alu_src1[6] => alu_src1[6].IN5
alu_src1[7] => alu_src1[7].IN5
alu_src1[8] => alu_src1[8].IN5
alu_src1[9] => alu_src1[9].IN5
alu_src1[10] => alu_src1[10].IN5
alu_src1[11] => alu_src1[11].IN5
alu_src1[12] => alu_src1[12].IN5
alu_src1[13] => alu_src1[13].IN5
alu_src1[14] => alu_src1[14].IN5
alu_src1[15] => alu_src1[15].IN5
alu_src1[16] => alu_src1[16].IN5
alu_src1[17] => alu_src1[17].IN5
alu_src1[18] => alu_src1[18].IN5
alu_src1[19] => alu_src1[19].IN5
alu_src1[20] => alu_src1[20].IN5
alu_src1[21] => alu_src1[21].IN5
alu_src1[22] => alu_src1[22].IN5
alu_src1[23] => alu_src1[23].IN5
alu_src1[24] => alu_src1[24].IN5
alu_src1[25] => alu_src1[25].IN5
alu_src1[26] => alu_src1[26].IN5
alu_src1[27] => alu_src1[27].IN5
alu_src1[28] => alu_src1[28].IN5
alu_src1[29] => alu_src1[29].IN5
alu_src1[30] => alu_src1[30].IN5
alu_src1[31] => alu_src1[31].IN5
alu_src2[0] => alu_src2[0].IN5
alu_src2[1] => alu_src2[1].IN5
alu_src2[2] => alu_src2[2].IN5
alu_src2[3] => alu_src2[3].IN5
alu_src2[4] => alu_src2[4].IN5
alu_src2[5] => alu_src2[5].IN5
alu_src2[6] => alu_src2[6].IN5
alu_src2[7] => alu_src2[7].IN5
alu_src2[8] => alu_src2[8].IN5
alu_src2[9] => alu_src2[9].IN5
alu_src2[10] => alu_src2[10].IN5
alu_src2[11] => alu_src2[11].IN5
alu_src2[12] => alu_src2[12].IN5
alu_src2[13] => alu_src2[13].IN5
alu_src2[14] => alu_src2[14].IN5
alu_src2[15] => alu_src2[15].IN5
alu_src2[16] => alu_src2[16].IN5
alu_src2[17] => alu_src2[17].IN5
alu_src2[18] => alu_src2[18].IN5
alu_src2[19] => alu_src2[19].IN5
alu_src2[20] => alu_src2[20].IN5
alu_src2[21] => alu_src2[21].IN5
alu_src2[22] => alu_src2[22].IN5
alu_src2[23] => alu_src2[23].IN5
alu_src2[24] => alu_src2[24].IN5
alu_src2[25] => alu_src2[25].IN5
alu_src2[26] => alu_src2[26].IN5
alu_src2[27] => alu_src2[27].IN5
alu_src2[28] => alu_src2[28].IN5
alu_src2[29] => alu_src2[29].IN5
alu_src2[30] => alu_src2[30].IN5
alu_src2[31] => alu_src2[31].IN5
alu_ctr[0] => alu_ctr[0].IN1
alu_ctr[1] => alu_ctr[1].IN1
alu_ctr[2] => alu_ctr[2].IN1


|mips|alu:alu0|and_32bit:and_op
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|and_32bit:and_op|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|or_32bit:or_op|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|mips|alu:alu0|adder:less_op|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:less_op|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:less_op|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:less_op|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:less_op|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:less_op|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:less_op|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:less_op|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:less_op|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:less_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:less_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:less_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|mips|alu:alu0|adder:add_op|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:add_op|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:add_op|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:add_op|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:add_op|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:add_op|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:add_op|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:add_op|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:add_op|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:add_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:add_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:add_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|mips|alu:alu0|adder:sub_op|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:sub_op|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:sub_op|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:sub_op|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:sub_op|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:sub_op|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:sub_op|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:sub_op|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu0|adder:sub_op|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu0|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|adder:sub_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|adder:sub_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|adder:sub_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1
result[0] <= or_32bit:or7.port0
result[1] <= or_32bit:or7.port0
result[2] <= or_32bit:or7.port0
result[3] <= or_32bit:or7.port0
result[4] <= or_32bit:or7.port0
result[5] <= or_32bit:or7.port0
result[6] <= or_32bit:or7.port0
result[7] <= or_32bit:or7.port0
result[8] <= or_32bit:or7.port0
result[9] <= or_32bit:or7.port0
result[10] <= or_32bit:or7.port0
result[11] <= or_32bit:or7.port0
result[12] <= or_32bit:or7.port0
result[13] <= or_32bit:or7.port0
result[14] <= or_32bit:or7.port0
result[15] <= or_32bit:or7.port0
result[16] <= or_32bit:or7.port0
result[17] <= or_32bit:or7.port0
result[18] <= or_32bit:or7.port0
result[19] <= or_32bit:or7.port0
result[20] <= or_32bit:or7.port0
result[21] <= or_32bit:or7.port0
result[22] <= or_32bit:or7.port0
result[23] <= or_32bit:or7.port0
result[24] <= or_32bit:or7.port0
result[25] <= or_32bit:or7.port0
result[26] <= or_32bit:or7.port0
result[27] <= or_32bit:or7.port0
result[28] <= or_32bit:or7.port0
result[29] <= or_32bit:or7.port0
result[30] <= or_32bit:or7.port0
result[31] <= or_32bit:or7.port0
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in_0[0] => in_0[0].IN1
in_0[1] => in_0[1].IN1
in_0[2] => in_0[2].IN1
in_0[3] => in_0[3].IN1
in_0[4] => in_0[4].IN1
in_0[5] => in_0[5].IN1
in_0[6] => in_0[6].IN1
in_0[7] => in_0[7].IN1
in_0[8] => in_0[8].IN1
in_0[9] => in_0[9].IN1
in_0[10] => in_0[10].IN1
in_0[11] => in_0[11].IN1
in_0[12] => in_0[12].IN1
in_0[13] => in_0[13].IN1
in_0[14] => in_0[14].IN1
in_0[15] => in_0[15].IN1
in_0[16] => in_0[16].IN1
in_0[17] => in_0[17].IN1
in_0[18] => in_0[18].IN1
in_0[19] => in_0[19].IN1
in_0[20] => in_0[20].IN1
in_0[21] => in_0[21].IN1
in_0[22] => in_0[22].IN1
in_0[23] => in_0[23].IN1
in_0[24] => in_0[24].IN1
in_0[25] => in_0[25].IN1
in_0[26] => in_0[26].IN1
in_0[27] => in_0[27].IN1
in_0[28] => in_0[28].IN1
in_0[29] => in_0[29].IN1
in_0[30] => in_0[30].IN1
in_0[31] => in_0[31].IN1
in_1[0] => in_1[0].IN1
in_1[1] => in_1[1].IN1
in_1[2] => in_1[2].IN1
in_1[3] => in_1[3].IN1
in_1[4] => in_1[4].IN1
in_1[5] => in_1[5].IN1
in_1[6] => in_1[6].IN1
in_1[7] => in_1[7].IN1
in_1[8] => in_1[8].IN1
in_1[9] => in_1[9].IN1
in_1[10] => in_1[10].IN1
in_1[11] => in_1[11].IN1
in_1[12] => in_1[12].IN1
in_1[13] => in_1[13].IN1
in_1[14] => in_1[14].IN1
in_1[15] => in_1[15].IN1
in_1[16] => in_1[16].IN1
in_1[17] => in_1[17].IN1
in_1[18] => in_1[18].IN1
in_1[19] => in_1[19].IN1
in_1[20] => in_1[20].IN1
in_1[21] => in_1[21].IN1
in_1[22] => in_1[22].IN1
in_1[23] => in_1[23].IN1
in_1[24] => in_1[24].IN1
in_1[25] => in_1[25].IN1
in_1[26] => in_1[26].IN1
in_1[27] => in_1[27].IN1
in_1[28] => in_1[28].IN1
in_1[29] => in_1[29].IN1
in_1[30] => in_1[30].IN1
in_1[31] => in_1[31].IN1
in_2[0] => in_2[0].IN1
in_2[1] => in_2[1].IN1
in_2[2] => in_2[2].IN1
in_2[3] => in_2[3].IN1
in_2[4] => in_2[4].IN1
in_2[5] => in_2[5].IN1
in_2[6] => in_2[6].IN1
in_2[7] => in_2[7].IN1
in_2[8] => in_2[8].IN1
in_2[9] => in_2[9].IN1
in_2[10] => in_2[10].IN1
in_2[11] => in_2[11].IN1
in_2[12] => in_2[12].IN1
in_2[13] => in_2[13].IN1
in_2[14] => in_2[14].IN1
in_2[15] => in_2[15].IN1
in_2[16] => in_2[16].IN1
in_2[17] => in_2[17].IN1
in_2[18] => in_2[18].IN1
in_2[19] => in_2[19].IN1
in_2[20] => in_2[20].IN1
in_2[21] => in_2[21].IN1
in_2[22] => in_2[22].IN1
in_2[23] => in_2[23].IN1
in_2[24] => in_2[24].IN1
in_2[25] => in_2[25].IN1
in_2[26] => in_2[26].IN1
in_2[27] => in_2[27].IN1
in_2[28] => in_2[28].IN1
in_2[29] => in_2[29].IN1
in_2[30] => in_2[30].IN1
in_2[31] => in_2[31].IN1
in_3[0] => in_3[0].IN1
in_3[1] => in_3[1].IN1
in_3[2] => in_3[2].IN1
in_3[3] => in_3[3].IN1
in_3[4] => in_3[4].IN1
in_3[5] => in_3[5].IN1
in_3[6] => in_3[6].IN1
in_3[7] => in_3[7].IN1
in_3[8] => in_3[8].IN1
in_3[9] => in_3[9].IN1
in_3[10] => in_3[10].IN1
in_3[11] => in_3[11].IN1
in_3[12] => in_3[12].IN1
in_3[13] => in_3[13].IN1
in_3[14] => in_3[14].IN1
in_3[15] => in_3[15].IN1
in_3[16] => in_3[16].IN1
in_3[17] => in_3[17].IN1
in_3[18] => in_3[18].IN1
in_3[19] => in_3[19].IN1
in_3[20] => in_3[20].IN1
in_3[21] => in_3[21].IN1
in_3[22] => in_3[22].IN1
in_3[23] => in_3[23].IN1
in_3[24] => in_3[24].IN1
in_3[25] => in_3[25].IN1
in_3[26] => in_3[26].IN1
in_3[27] => in_3[27].IN1
in_3[28] => in_3[28].IN1
in_3[29] => in_3[29].IN1
in_3[30] => in_3[30].IN1
in_3[31] => in_3[31].IN1
in_4[0] => in_4[0].IN1
in_4[1] => in_4[1].IN1
in_4[2] => in_4[2].IN1
in_4[3] => in_4[3].IN1
in_4[4] => in_4[4].IN1
in_4[5] => in_4[5].IN1
in_4[6] => in_4[6].IN1
in_4[7] => in_4[7].IN1
in_4[8] => in_4[8].IN1
in_4[9] => in_4[9].IN1
in_4[10] => in_4[10].IN1
in_4[11] => in_4[11].IN1
in_4[12] => in_4[12].IN1
in_4[13] => in_4[13].IN1
in_4[14] => in_4[14].IN1
in_4[15] => in_4[15].IN1
in_4[16] => in_4[16].IN1
in_4[17] => in_4[17].IN1
in_4[18] => in_4[18].IN1
in_4[19] => in_4[19].IN1
in_4[20] => in_4[20].IN1
in_4[21] => in_4[21].IN1
in_4[22] => in_4[22].IN1
in_4[23] => in_4[23].IN1
in_4[24] => in_4[24].IN1
in_4[25] => in_4[25].IN1
in_4[26] => in_4[26].IN1
in_4[27] => in_4[27].IN1
in_4[28] => in_4[28].IN1
in_4[29] => in_4[29].IN1
in_4[30] => in_4[30].IN1
in_4[31] => in_4[31].IN1
in_5[0] => in_5[0].IN1
in_5[1] => in_5[1].IN1
in_5[2] => in_5[2].IN1
in_5[3] => in_5[3].IN1
in_5[4] => in_5[4].IN1
in_5[5] => in_5[5].IN1
in_5[6] => in_5[6].IN1
in_5[7] => in_5[7].IN1
in_5[8] => in_5[8].IN1
in_5[9] => in_5[9].IN1
in_5[10] => in_5[10].IN1
in_5[11] => in_5[11].IN1
in_5[12] => in_5[12].IN1
in_5[13] => in_5[13].IN1
in_5[14] => in_5[14].IN1
in_5[15] => in_5[15].IN1
in_5[16] => in_5[16].IN1
in_5[17] => in_5[17].IN1
in_5[18] => in_5[18].IN1
in_5[19] => in_5[19].IN1
in_5[20] => in_5[20].IN1
in_5[21] => in_5[21].IN1
in_5[22] => in_5[22].IN1
in_5[23] => in_5[23].IN1
in_5[24] => in_5[24].IN1
in_5[25] => in_5[25].IN1
in_5[26] => in_5[26].IN1
in_5[27] => in_5[27].IN1
in_5[28] => in_5[28].IN1
in_5[29] => in_5[29].IN1
in_5[30] => in_5[30].IN1
in_5[31] => in_5[31].IN1
in_6[0] => in_6[0].IN1
in_6[1] => in_6[1].IN1
in_6[2] => in_6[2].IN1
in_6[3] => in_6[3].IN1
in_6[4] => in_6[4].IN1
in_6[5] => in_6[5].IN1
in_6[6] => in_6[6].IN1
in_6[7] => in_6[7].IN1
in_6[8] => in_6[8].IN1
in_6[9] => in_6[9].IN1
in_6[10] => in_6[10].IN1
in_6[11] => in_6[11].IN1
in_6[12] => in_6[12].IN1
in_6[13] => in_6[13].IN1
in_6[14] => in_6[14].IN1
in_6[15] => in_6[15].IN1
in_6[16] => in_6[16].IN1
in_6[17] => in_6[17].IN1
in_6[18] => in_6[18].IN1
in_6[19] => in_6[19].IN1
in_6[20] => in_6[20].IN1
in_6[21] => in_6[21].IN1
in_6[22] => in_6[22].IN1
in_6[23] => in_6[23].IN1
in_6[24] => in_6[24].IN1
in_6[25] => in_6[25].IN1
in_6[26] => in_6[26].IN1
in_6[27] => in_6[27].IN1
in_6[28] => in_6[28].IN1
in_6[29] => in_6[29].IN1
in_6[30] => in_6[30].IN1
in_6[31] => in_6[31].IN1
in_7[0] => in_7[0].IN1
in_7[1] => in_7[1].IN1
in_7[2] => in_7[2].IN1
in_7[3] => in_7[3].IN1
in_7[4] => in_7[4].IN1
in_7[5] => in_7[5].IN1
in_7[6] => in_7[6].IN1
in_7[7] => in_7[7].IN1
in_7[8] => in_7[8].IN1
in_7[9] => in_7[9].IN1
in_7[10] => in_7[10].IN1
in_7[11] => in_7[11].IN1
in_7[12] => in_7[12].IN1
in_7[13] => in_7[13].IN1
in_7[14] => in_7[14].IN1
in_7[15] => in_7[15].IN1
in_7[16] => in_7[16].IN1
in_7[17] => in_7[17].IN1
in_7[18] => in_7[18].IN1
in_7[19] => in_7[19].IN1
in_7[20] => in_7[20].IN1
in_7[21] => in_7[21].IN1
in_7[22] => in_7[22].IN1
in_7[23] => in_7[23].IN1
in_7[24] => in_7[24].IN1
in_7[25] => in_7[25].IN1
in_7[26] => in_7[26].IN1
in_7[27] => in_7[27].IN1
in_7[28] => in_7[28].IN1
in_7[29] => in_7[29].IN1
in_7[30] => in_7[30].IN1
in_7[31] => in_7[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|extend_to_32:ext2
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|extend_to_32:ext3
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|extend_to_32:ext4
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|extend_to_32:ext5
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|extend_to_32:ext6
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|extend_to_32:ext7
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|extend_to_32:ext8
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu0|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|memory_block:memory_block0
read_data[0] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[1] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[2] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[3] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[4] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[5] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[6] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[7] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[8] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[9] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[10] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[11] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[12] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[13] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[14] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[15] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[16] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[17] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[18] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[19] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[20] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[21] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[22] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[23] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[24] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[25] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[26] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[27] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[28] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[29] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[30] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
read_data[31] <= read_data.DB_MAX_OUTPUT_PORT_TYPE
byteOperations => memory.data_a[31].OUTPUTSELECT
byteOperations => memory.data_a[30].OUTPUTSELECT
byteOperations => memory.data_a[29].OUTPUTSELECT
byteOperations => memory.data_a[28].OUTPUTSELECT
byteOperations => memory.data_a[27].OUTPUTSELECT
byteOperations => memory.data_a[26].OUTPUTSELECT
byteOperations => memory.data_a[25].OUTPUTSELECT
byteOperations => memory.data_a[24].OUTPUTSELECT
byteOperations => memory.data_a[23].OUTPUTSELECT
byteOperations => memory.data_a[22].OUTPUTSELECT
byteOperations => memory.data_a[21].OUTPUTSELECT
byteOperations => memory.data_a[20].OUTPUTSELECT
byteOperations => memory.data_a[19].OUTPUTSELECT
byteOperations => memory.data_a[18].OUTPUTSELECT
byteOperations => memory.data_a[17].OUTPUTSELECT
byteOperations => memory.data_a[16].OUTPUTSELECT
byteOperations => memory.data_a[15].OUTPUTSELECT
byteOperations => memory.data_a[14].OUTPUTSELECT
byteOperations => memory.data_a[13].OUTPUTSELECT
byteOperations => memory.data_a[12].OUTPUTSELECT
byteOperations => memory.data_a[11].OUTPUTSELECT
byteOperations => memory.data_a[10].OUTPUTSELECT
byteOperations => memory.data_a[9].OUTPUTSELECT
byteOperations => memory.data_a[8].OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
byteOperations => read_data.OUTPUTSELECT
address[0] => memory.RADDR
address[0] => memory.WADDR
address[1] => memory.RADDR1
address[1] => memory.WADDR1
address[2] => memory.RADDR2
address[2] => memory.WADDR2
address[3] => memory.RADDR3
address[3] => memory.WADDR3
address[4] => memory.RADDR4
address[4] => memory.WADDR4
address[5] => memory.RADDR5
address[5] => memory.WADDR5
address[6] => memory.RADDR6
address[6] => memory.WADDR6
address[7] => memory.RADDR7
address[7] => memory.WADDR7
address[8] => ~NO_FANOUT~
address[9] => ~NO_FANOUT~
address[10] => ~NO_FANOUT~
address[11] => ~NO_FANOUT~
address[12] => ~NO_FANOUT~
address[13] => ~NO_FANOUT~
address[14] => ~NO_FANOUT~
address[15] => ~NO_FANOUT~
address[16] => ~NO_FANOUT~
address[17] => ~NO_FANOUT~
write_data[0] => read_data.DATAA
write_data[0] => memory.DATAIN
write_data[1] => read_data.DATAA
write_data[1] => memory.DATAIN1
write_data[2] => read_data.DATAA
write_data[2] => memory.DATAIN2
write_data[3] => read_data.DATAA
write_data[3] => memory.DATAIN3
write_data[4] => read_data.DATAA
write_data[4] => memory.DATAIN4
write_data[5] => read_data.DATAA
write_data[5] => memory.DATAIN5
write_data[6] => read_data.DATAA
write_data[6] => memory.DATAIN6
write_data[7] => read_data.DATAA
write_data[7] => memory.DATAIN7
write_data[8] => read_data.DATAA
write_data[8] => read_data.DATAA
write_data[8] => memory.data_a[8].DATAA
write_data[9] => read_data.DATAA
write_data[9] => read_data.DATAA
write_data[9] => memory.data_a[9].DATAA
write_data[10] => read_data.DATAA
write_data[10] => read_data.DATAA
write_data[10] => memory.data_a[10].DATAA
write_data[11] => read_data.DATAA
write_data[11] => read_data.DATAA
write_data[11] => memory.data_a[11].DATAA
write_data[12] => read_data.DATAA
write_data[12] => read_data.DATAA
write_data[12] => memory.data_a[12].DATAA
write_data[13] => read_data.DATAA
write_data[13] => read_data.DATAA
write_data[13] => memory.data_a[13].DATAA
write_data[14] => read_data.DATAA
write_data[14] => read_data.DATAA
write_data[14] => memory.data_a[14].DATAA
write_data[15] => read_data.DATAA
write_data[15] => read_data.DATAA
write_data[15] => memory.data_a[15].DATAA
write_data[16] => read_data.DATAA
write_data[16] => read_data.DATAA
write_data[16] => memory.data_a[16].DATAA
write_data[17] => read_data.DATAA
write_data[17] => read_data.DATAA
write_data[17] => memory.data_a[17].DATAA
write_data[18] => read_data.DATAA
write_data[18] => read_data.DATAA
write_data[18] => memory.data_a[18].DATAA
write_data[19] => read_data.DATAA
write_data[19] => read_data.DATAA
write_data[19] => memory.data_a[19].DATAA
write_data[20] => read_data.DATAA
write_data[20] => read_data.DATAA
write_data[20] => memory.data_a[20].DATAA
write_data[21] => read_data.DATAA
write_data[21] => read_data.DATAA
write_data[21] => memory.data_a[21].DATAA
write_data[22] => read_data.DATAA
write_data[22] => read_data.DATAA
write_data[22] => memory.data_a[22].DATAA
write_data[23] => read_data.DATAA
write_data[23] => read_data.DATAA
write_data[23] => memory.data_a[23].DATAA
write_data[24] => read_data.DATAA
write_data[24] => read_data.DATAA
write_data[24] => memory.data_a[24].DATAA
write_data[25] => read_data.DATAA
write_data[25] => read_data.DATAA
write_data[25] => memory.data_a[25].DATAA
write_data[26] => read_data.DATAA
write_data[26] => read_data.DATAA
write_data[26] => memory.data_a[26].DATAA
write_data[27] => read_data.DATAA
write_data[27] => read_data.DATAA
write_data[27] => memory.data_a[27].DATAA
write_data[28] => read_data.DATAA
write_data[28] => read_data.DATAA
write_data[28] => memory.data_a[28].DATAA
write_data[29] => read_data.DATAA
write_data[29] => read_data.DATAA
write_data[29] => memory.data_a[29].DATAA
write_data[30] => read_data.DATAA
write_data[30] => read_data.DATAA
write_data[30] => memory.data_a[30].DATAA
write_data[31] => read_data.DATAA
write_data[31] => read_data.DATAA
write_data[31] => memory.data_a[31].DATAA
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memRead => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => read_data.OUTPUTSELECT
memWrite => memory.WE


|mips|mux_2x1_32bit:mux4
result[0] <= or_32bit:or0.port0
result[1] <= or_32bit:or0.port0
result[2] <= or_32bit:or0.port0
result[3] <= or_32bit:or0.port0
result[4] <= or_32bit:or0.port0
result[5] <= or_32bit:or0.port0
result[6] <= or_32bit:or0.port0
result[7] <= or_32bit:or0.port0
result[8] <= or_32bit:or0.port0
result[9] <= or_32bit:or0.port0
result[10] <= or_32bit:or0.port0
result[11] <= or_32bit:or0.port0
result[12] <= or_32bit:or0.port0
result[13] <= or_32bit:or0.port0
result[14] <= or_32bit:or0.port0
result[15] <= or_32bit:or0.port0
result[16] <= or_32bit:or0.port0
result[17] <= or_32bit:or0.port0
result[18] <= or_32bit:or0.port0
result[19] <= or_32bit:or0.port0
result[20] <= or_32bit:or0.port0
result[21] <= or_32bit:or0.port0
result[22] <= or_32bit:or0.port0
result[23] <= or_32bit:or0.port0
result[24] <= or_32bit:or0.port0
result[25] <= or_32bit:or0.port0
result[26] <= or_32bit:or0.port0
result[27] <= or_32bit:or0.port0
result[28] <= or_32bit:or0.port0
result[29] <= or_32bit:or0.port0
result[30] <= or_32bit:or0.port0
result[31] <= or_32bit:or0.port0
input0[0] => input0[0].IN1
input0[1] => input0[1].IN1
input0[2] => input0[2].IN1
input0[3] => input0[3].IN1
input0[4] => input0[4].IN1
input0[5] => input0[5].IN1
input0[6] => input0[6].IN1
input0[7] => input0[7].IN1
input0[8] => input0[8].IN1
input0[9] => input0[9].IN1
input0[10] => input0[10].IN1
input0[11] => input0[11].IN1
input0[12] => input0[12].IN1
input0[13] => input0[13].IN1
input0[14] => input0[14].IN1
input0[15] => input0[15].IN1
input0[16] => input0[16].IN1
input0[17] => input0[17].IN1
input0[18] => input0[18].IN1
input0[19] => input0[19].IN1
input0[20] => input0[20].IN1
input0[21] => input0[21].IN1
input0[22] => input0[22].IN1
input0[23] => input0[23].IN1
input0[24] => input0[24].IN1
input0[25] => input0[25].IN1
input0[26] => input0[26].IN1
input0[27] => input0[27].IN1
input0[28] => input0[28].IN1
input0[29] => input0[29].IN1
input0[30] => input0[30].IN1
input0[31] => input0[31].IN1
input1[0] => input1[0].IN1
input1[1] => input1[1].IN1
input1[2] => input1[2].IN1
input1[3] => input1[3].IN1
input1[4] => input1[4].IN1
input1[5] => input1[5].IN1
input1[6] => input1[6].IN1
input1[7] => input1[7].IN1
input1[8] => input1[8].IN1
input1[9] => input1[9].IN1
input1[10] => input1[10].IN1
input1[11] => input1[11].IN1
input1[12] => input1[12].IN1
input1[13] => input1[13].IN1
input1[14] => input1[14].IN1
input1[15] => input1[15].IN1
input1[16] => input1[16].IN1
input1[17] => input1[17].IN1
input1[18] => input1[18].IN1
input1[19] => input1[19].IN1
input1[20] => input1[20].IN1
input1[21] => input1[21].IN1
input1[22] => input1[22].IN1
input1[23] => input1[23].IN1
input1[24] => input1[24].IN1
input1[25] => input1[25].IN1
input1[26] => input1[26].IN1
input1[27] => input1[27].IN1
input1[28] => input1[28].IN1
input1[29] => input1[29].IN1
input1[30] => input1[30].IN1
input1[31] => input1[31].IN1
sel => sel.IN1


|mips|mux_2x1_32bit:mux4|extend_to_32:extend0
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux4|extend_to_32:extend1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux4|and_32bit:and0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|and_32bit:and1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux4|or_32bit:or0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1
alu_result[0] <= mux_8x1_32bit:mux1.port0
alu_result[1] <= mux_8x1_32bit:mux1.port0
alu_result[2] <= mux_8x1_32bit:mux1.port0
alu_result[3] <= mux_8x1_32bit:mux1.port0
alu_result[4] <= mux_8x1_32bit:mux1.port0
alu_result[5] <= mux_8x1_32bit:mux1.port0
alu_result[6] <= mux_8x1_32bit:mux1.port0
alu_result[7] <= mux_8x1_32bit:mux1.port0
alu_result[8] <= mux_8x1_32bit:mux1.port0
alu_result[9] <= mux_8x1_32bit:mux1.port0
alu_result[10] <= mux_8x1_32bit:mux1.port0
alu_result[11] <= mux_8x1_32bit:mux1.port0
alu_result[12] <= mux_8x1_32bit:mux1.port0
alu_result[13] <= mux_8x1_32bit:mux1.port0
alu_result[14] <= mux_8x1_32bit:mux1.port0
alu_result[15] <= mux_8x1_32bit:mux1.port0
alu_result[16] <= mux_8x1_32bit:mux1.port0
alu_result[17] <= mux_8x1_32bit:mux1.port0
alu_result[18] <= mux_8x1_32bit:mux1.port0
alu_result[19] <= mux_8x1_32bit:mux1.port0
alu_result[20] <= mux_8x1_32bit:mux1.port0
alu_result[21] <= mux_8x1_32bit:mux1.port0
alu_result[22] <= mux_8x1_32bit:mux1.port0
alu_result[23] <= mux_8x1_32bit:mux1.port0
alu_result[24] <= mux_8x1_32bit:mux1.port0
alu_result[25] <= mux_8x1_32bit:mux1.port0
alu_result[26] <= mux_8x1_32bit:mux1.port0
alu_result[27] <= mux_8x1_32bit:mux1.port0
alu_result[28] <= mux_8x1_32bit:mux1.port0
alu_result[29] <= mux_8x1_32bit:mux1.port0
alu_result[30] <= mux_8x1_32bit:mux1.port0
alu_result[31] <= mux_8x1_32bit:mux1.port0
zero_bit <= nor1.DB_MAX_OUTPUT_PORT_TYPE
alu_src1[0] => alu_src1[0].IN5
alu_src1[1] => alu_src1[1].IN5
alu_src1[2] => alu_src1[2].IN5
alu_src1[3] => alu_src1[3].IN5
alu_src1[4] => alu_src1[4].IN5
alu_src1[5] => alu_src1[5].IN5
alu_src1[6] => alu_src1[6].IN5
alu_src1[7] => alu_src1[7].IN5
alu_src1[8] => alu_src1[8].IN5
alu_src1[9] => alu_src1[9].IN5
alu_src1[10] => alu_src1[10].IN5
alu_src1[11] => alu_src1[11].IN5
alu_src1[12] => alu_src1[12].IN5
alu_src1[13] => alu_src1[13].IN5
alu_src1[14] => alu_src1[14].IN5
alu_src1[15] => alu_src1[15].IN5
alu_src1[16] => alu_src1[16].IN5
alu_src1[17] => alu_src1[17].IN5
alu_src1[18] => alu_src1[18].IN5
alu_src1[19] => alu_src1[19].IN5
alu_src1[20] => alu_src1[20].IN5
alu_src1[21] => alu_src1[21].IN5
alu_src1[22] => alu_src1[22].IN5
alu_src1[23] => alu_src1[23].IN5
alu_src1[24] => alu_src1[24].IN5
alu_src1[25] => alu_src1[25].IN5
alu_src1[26] => alu_src1[26].IN5
alu_src1[27] => alu_src1[27].IN5
alu_src1[28] => alu_src1[28].IN5
alu_src1[29] => alu_src1[29].IN5
alu_src1[30] => alu_src1[30].IN5
alu_src1[31] => alu_src1[31].IN5
alu_src2[0] => alu_src2[0].IN5
alu_src2[1] => alu_src2[1].IN5
alu_src2[2] => alu_src2[2].IN5
alu_src2[3] => alu_src2[3].IN5
alu_src2[4] => alu_src2[4].IN5
alu_src2[5] => alu_src2[5].IN5
alu_src2[6] => alu_src2[6].IN5
alu_src2[7] => alu_src2[7].IN5
alu_src2[8] => alu_src2[8].IN5
alu_src2[9] => alu_src2[9].IN5
alu_src2[10] => alu_src2[10].IN5
alu_src2[11] => alu_src2[11].IN5
alu_src2[12] => alu_src2[12].IN5
alu_src2[13] => alu_src2[13].IN5
alu_src2[14] => alu_src2[14].IN5
alu_src2[15] => alu_src2[15].IN5
alu_src2[16] => alu_src2[16].IN5
alu_src2[17] => alu_src2[17].IN5
alu_src2[18] => alu_src2[18].IN5
alu_src2[19] => alu_src2[19].IN5
alu_src2[20] => alu_src2[20].IN5
alu_src2[21] => alu_src2[21].IN5
alu_src2[22] => alu_src2[22].IN5
alu_src2[23] => alu_src2[23].IN5
alu_src2[24] => alu_src2[24].IN5
alu_src2[25] => alu_src2[25].IN5
alu_src2[26] => alu_src2[26].IN5
alu_src2[27] => alu_src2[27].IN5
alu_src2[28] => alu_src2[28].IN5
alu_src2[29] => alu_src2[29].IN5
alu_src2[30] => alu_src2[30].IN5
alu_src2[31] => alu_src2[31].IN5
alu_ctr[0] => alu_ctr[0].IN1
alu_ctr[1] => alu_ctr[1].IN1
alu_ctr[2] => alu_ctr[2].IN1


|mips|alu:alu1|and_32bit:and_op
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|and_32bit:and_op|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|or_32bit:or_op|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|mips|alu:alu1|adder:less_op|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:less_op|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:less_op|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:less_op|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:less_op|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:less_op|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:less_op|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:less_op|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:less_op|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:less_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:less_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:less_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|mips|alu:alu1|adder:add_op|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:add_op|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:add_op|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:add_op|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:add_op|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:add_op|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:add_op|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:add_op|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:add_op|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:add_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:add_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:add_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|mips|alu:alu1|adder:sub_op|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:sub_op|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:sub_op|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:sub_op|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:sub_op|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:sub_op|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:sub_op|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:sub_op|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu1|adder:sub_op|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu1|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|adder:sub_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|adder:sub_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|adder:sub_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1
result[0] <= or_32bit:or7.port0
result[1] <= or_32bit:or7.port0
result[2] <= or_32bit:or7.port0
result[3] <= or_32bit:or7.port0
result[4] <= or_32bit:or7.port0
result[5] <= or_32bit:or7.port0
result[6] <= or_32bit:or7.port0
result[7] <= or_32bit:or7.port0
result[8] <= or_32bit:or7.port0
result[9] <= or_32bit:or7.port0
result[10] <= or_32bit:or7.port0
result[11] <= or_32bit:or7.port0
result[12] <= or_32bit:or7.port0
result[13] <= or_32bit:or7.port0
result[14] <= or_32bit:or7.port0
result[15] <= or_32bit:or7.port0
result[16] <= or_32bit:or7.port0
result[17] <= or_32bit:or7.port0
result[18] <= or_32bit:or7.port0
result[19] <= or_32bit:or7.port0
result[20] <= or_32bit:or7.port0
result[21] <= or_32bit:or7.port0
result[22] <= or_32bit:or7.port0
result[23] <= or_32bit:or7.port0
result[24] <= or_32bit:or7.port0
result[25] <= or_32bit:or7.port0
result[26] <= or_32bit:or7.port0
result[27] <= or_32bit:or7.port0
result[28] <= or_32bit:or7.port0
result[29] <= or_32bit:or7.port0
result[30] <= or_32bit:or7.port0
result[31] <= or_32bit:or7.port0
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in_0[0] => in_0[0].IN1
in_0[1] => in_0[1].IN1
in_0[2] => in_0[2].IN1
in_0[3] => in_0[3].IN1
in_0[4] => in_0[4].IN1
in_0[5] => in_0[5].IN1
in_0[6] => in_0[6].IN1
in_0[7] => in_0[7].IN1
in_0[8] => in_0[8].IN1
in_0[9] => in_0[9].IN1
in_0[10] => in_0[10].IN1
in_0[11] => in_0[11].IN1
in_0[12] => in_0[12].IN1
in_0[13] => in_0[13].IN1
in_0[14] => in_0[14].IN1
in_0[15] => in_0[15].IN1
in_0[16] => in_0[16].IN1
in_0[17] => in_0[17].IN1
in_0[18] => in_0[18].IN1
in_0[19] => in_0[19].IN1
in_0[20] => in_0[20].IN1
in_0[21] => in_0[21].IN1
in_0[22] => in_0[22].IN1
in_0[23] => in_0[23].IN1
in_0[24] => in_0[24].IN1
in_0[25] => in_0[25].IN1
in_0[26] => in_0[26].IN1
in_0[27] => in_0[27].IN1
in_0[28] => in_0[28].IN1
in_0[29] => in_0[29].IN1
in_0[30] => in_0[30].IN1
in_0[31] => in_0[31].IN1
in_1[0] => in_1[0].IN1
in_1[1] => in_1[1].IN1
in_1[2] => in_1[2].IN1
in_1[3] => in_1[3].IN1
in_1[4] => in_1[4].IN1
in_1[5] => in_1[5].IN1
in_1[6] => in_1[6].IN1
in_1[7] => in_1[7].IN1
in_1[8] => in_1[8].IN1
in_1[9] => in_1[9].IN1
in_1[10] => in_1[10].IN1
in_1[11] => in_1[11].IN1
in_1[12] => in_1[12].IN1
in_1[13] => in_1[13].IN1
in_1[14] => in_1[14].IN1
in_1[15] => in_1[15].IN1
in_1[16] => in_1[16].IN1
in_1[17] => in_1[17].IN1
in_1[18] => in_1[18].IN1
in_1[19] => in_1[19].IN1
in_1[20] => in_1[20].IN1
in_1[21] => in_1[21].IN1
in_1[22] => in_1[22].IN1
in_1[23] => in_1[23].IN1
in_1[24] => in_1[24].IN1
in_1[25] => in_1[25].IN1
in_1[26] => in_1[26].IN1
in_1[27] => in_1[27].IN1
in_1[28] => in_1[28].IN1
in_1[29] => in_1[29].IN1
in_1[30] => in_1[30].IN1
in_1[31] => in_1[31].IN1
in_2[0] => in_2[0].IN1
in_2[1] => in_2[1].IN1
in_2[2] => in_2[2].IN1
in_2[3] => in_2[3].IN1
in_2[4] => in_2[4].IN1
in_2[5] => in_2[5].IN1
in_2[6] => in_2[6].IN1
in_2[7] => in_2[7].IN1
in_2[8] => in_2[8].IN1
in_2[9] => in_2[9].IN1
in_2[10] => in_2[10].IN1
in_2[11] => in_2[11].IN1
in_2[12] => in_2[12].IN1
in_2[13] => in_2[13].IN1
in_2[14] => in_2[14].IN1
in_2[15] => in_2[15].IN1
in_2[16] => in_2[16].IN1
in_2[17] => in_2[17].IN1
in_2[18] => in_2[18].IN1
in_2[19] => in_2[19].IN1
in_2[20] => in_2[20].IN1
in_2[21] => in_2[21].IN1
in_2[22] => in_2[22].IN1
in_2[23] => in_2[23].IN1
in_2[24] => in_2[24].IN1
in_2[25] => in_2[25].IN1
in_2[26] => in_2[26].IN1
in_2[27] => in_2[27].IN1
in_2[28] => in_2[28].IN1
in_2[29] => in_2[29].IN1
in_2[30] => in_2[30].IN1
in_2[31] => in_2[31].IN1
in_3[0] => in_3[0].IN1
in_3[1] => in_3[1].IN1
in_3[2] => in_3[2].IN1
in_3[3] => in_3[3].IN1
in_3[4] => in_3[4].IN1
in_3[5] => in_3[5].IN1
in_3[6] => in_3[6].IN1
in_3[7] => in_3[7].IN1
in_3[8] => in_3[8].IN1
in_3[9] => in_3[9].IN1
in_3[10] => in_3[10].IN1
in_3[11] => in_3[11].IN1
in_3[12] => in_3[12].IN1
in_3[13] => in_3[13].IN1
in_3[14] => in_3[14].IN1
in_3[15] => in_3[15].IN1
in_3[16] => in_3[16].IN1
in_3[17] => in_3[17].IN1
in_3[18] => in_3[18].IN1
in_3[19] => in_3[19].IN1
in_3[20] => in_3[20].IN1
in_3[21] => in_3[21].IN1
in_3[22] => in_3[22].IN1
in_3[23] => in_3[23].IN1
in_3[24] => in_3[24].IN1
in_3[25] => in_3[25].IN1
in_3[26] => in_3[26].IN1
in_3[27] => in_3[27].IN1
in_3[28] => in_3[28].IN1
in_3[29] => in_3[29].IN1
in_3[30] => in_3[30].IN1
in_3[31] => in_3[31].IN1
in_4[0] => in_4[0].IN1
in_4[1] => in_4[1].IN1
in_4[2] => in_4[2].IN1
in_4[3] => in_4[3].IN1
in_4[4] => in_4[4].IN1
in_4[5] => in_4[5].IN1
in_4[6] => in_4[6].IN1
in_4[7] => in_4[7].IN1
in_4[8] => in_4[8].IN1
in_4[9] => in_4[9].IN1
in_4[10] => in_4[10].IN1
in_4[11] => in_4[11].IN1
in_4[12] => in_4[12].IN1
in_4[13] => in_4[13].IN1
in_4[14] => in_4[14].IN1
in_4[15] => in_4[15].IN1
in_4[16] => in_4[16].IN1
in_4[17] => in_4[17].IN1
in_4[18] => in_4[18].IN1
in_4[19] => in_4[19].IN1
in_4[20] => in_4[20].IN1
in_4[21] => in_4[21].IN1
in_4[22] => in_4[22].IN1
in_4[23] => in_4[23].IN1
in_4[24] => in_4[24].IN1
in_4[25] => in_4[25].IN1
in_4[26] => in_4[26].IN1
in_4[27] => in_4[27].IN1
in_4[28] => in_4[28].IN1
in_4[29] => in_4[29].IN1
in_4[30] => in_4[30].IN1
in_4[31] => in_4[31].IN1
in_5[0] => in_5[0].IN1
in_5[1] => in_5[1].IN1
in_5[2] => in_5[2].IN1
in_5[3] => in_5[3].IN1
in_5[4] => in_5[4].IN1
in_5[5] => in_5[5].IN1
in_5[6] => in_5[6].IN1
in_5[7] => in_5[7].IN1
in_5[8] => in_5[8].IN1
in_5[9] => in_5[9].IN1
in_5[10] => in_5[10].IN1
in_5[11] => in_5[11].IN1
in_5[12] => in_5[12].IN1
in_5[13] => in_5[13].IN1
in_5[14] => in_5[14].IN1
in_5[15] => in_5[15].IN1
in_5[16] => in_5[16].IN1
in_5[17] => in_5[17].IN1
in_5[18] => in_5[18].IN1
in_5[19] => in_5[19].IN1
in_5[20] => in_5[20].IN1
in_5[21] => in_5[21].IN1
in_5[22] => in_5[22].IN1
in_5[23] => in_5[23].IN1
in_5[24] => in_5[24].IN1
in_5[25] => in_5[25].IN1
in_5[26] => in_5[26].IN1
in_5[27] => in_5[27].IN1
in_5[28] => in_5[28].IN1
in_5[29] => in_5[29].IN1
in_5[30] => in_5[30].IN1
in_5[31] => in_5[31].IN1
in_6[0] => in_6[0].IN1
in_6[1] => in_6[1].IN1
in_6[2] => in_6[2].IN1
in_6[3] => in_6[3].IN1
in_6[4] => in_6[4].IN1
in_6[5] => in_6[5].IN1
in_6[6] => in_6[6].IN1
in_6[7] => in_6[7].IN1
in_6[8] => in_6[8].IN1
in_6[9] => in_6[9].IN1
in_6[10] => in_6[10].IN1
in_6[11] => in_6[11].IN1
in_6[12] => in_6[12].IN1
in_6[13] => in_6[13].IN1
in_6[14] => in_6[14].IN1
in_6[15] => in_6[15].IN1
in_6[16] => in_6[16].IN1
in_6[17] => in_6[17].IN1
in_6[18] => in_6[18].IN1
in_6[19] => in_6[19].IN1
in_6[20] => in_6[20].IN1
in_6[21] => in_6[21].IN1
in_6[22] => in_6[22].IN1
in_6[23] => in_6[23].IN1
in_6[24] => in_6[24].IN1
in_6[25] => in_6[25].IN1
in_6[26] => in_6[26].IN1
in_6[27] => in_6[27].IN1
in_6[28] => in_6[28].IN1
in_6[29] => in_6[29].IN1
in_6[30] => in_6[30].IN1
in_6[31] => in_6[31].IN1
in_7[0] => in_7[0].IN1
in_7[1] => in_7[1].IN1
in_7[2] => in_7[2].IN1
in_7[3] => in_7[3].IN1
in_7[4] => in_7[4].IN1
in_7[5] => in_7[5].IN1
in_7[6] => in_7[6].IN1
in_7[7] => in_7[7].IN1
in_7[8] => in_7[8].IN1
in_7[9] => in_7[9].IN1
in_7[10] => in_7[10].IN1
in_7[11] => in_7[11].IN1
in_7[12] => in_7[12].IN1
in_7[13] => in_7[13].IN1
in_7[14] => in_7[14].IN1
in_7[15] => in_7[15].IN1
in_7[16] => in_7[16].IN1
in_7[17] => in_7[17].IN1
in_7[18] => in_7[18].IN1
in_7[19] => in_7[19].IN1
in_7[20] => in_7[20].IN1
in_7[21] => in_7[21].IN1
in_7[22] => in_7[22].IN1
in_7[23] => in_7[23].IN1
in_7[24] => in_7[24].IN1
in_7[25] => in_7[25].IN1
in_7[26] => in_7[26].IN1
in_7[27] => in_7[27].IN1
in_7[28] => in_7[28].IN1
in_7[29] => in_7[29].IN1
in_7[30] => in_7[30].IN1
in_7[31] => in_7[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|extend_to_32:ext2
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|extend_to_32:ext3
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|extend_to_32:ext4
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|extend_to_32:ext5
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|extend_to_32:ext6
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|extend_to_32:ext7
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|extend_to_32:ext8
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu1|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2
alu_result[0] <= mux_8x1_32bit:mux1.port0
alu_result[1] <= mux_8x1_32bit:mux1.port0
alu_result[2] <= mux_8x1_32bit:mux1.port0
alu_result[3] <= mux_8x1_32bit:mux1.port0
alu_result[4] <= mux_8x1_32bit:mux1.port0
alu_result[5] <= mux_8x1_32bit:mux1.port0
alu_result[6] <= mux_8x1_32bit:mux1.port0
alu_result[7] <= mux_8x1_32bit:mux1.port0
alu_result[8] <= mux_8x1_32bit:mux1.port0
alu_result[9] <= mux_8x1_32bit:mux1.port0
alu_result[10] <= mux_8x1_32bit:mux1.port0
alu_result[11] <= mux_8x1_32bit:mux1.port0
alu_result[12] <= mux_8x1_32bit:mux1.port0
alu_result[13] <= mux_8x1_32bit:mux1.port0
alu_result[14] <= mux_8x1_32bit:mux1.port0
alu_result[15] <= mux_8x1_32bit:mux1.port0
alu_result[16] <= mux_8x1_32bit:mux1.port0
alu_result[17] <= mux_8x1_32bit:mux1.port0
alu_result[18] <= mux_8x1_32bit:mux1.port0
alu_result[19] <= mux_8x1_32bit:mux1.port0
alu_result[20] <= mux_8x1_32bit:mux1.port0
alu_result[21] <= mux_8x1_32bit:mux1.port0
alu_result[22] <= mux_8x1_32bit:mux1.port0
alu_result[23] <= mux_8x1_32bit:mux1.port0
alu_result[24] <= mux_8x1_32bit:mux1.port0
alu_result[25] <= mux_8x1_32bit:mux1.port0
alu_result[26] <= mux_8x1_32bit:mux1.port0
alu_result[27] <= mux_8x1_32bit:mux1.port0
alu_result[28] <= mux_8x1_32bit:mux1.port0
alu_result[29] <= mux_8x1_32bit:mux1.port0
alu_result[30] <= mux_8x1_32bit:mux1.port0
alu_result[31] <= mux_8x1_32bit:mux1.port0
zero_bit <= nor1.DB_MAX_OUTPUT_PORT_TYPE
alu_src1[0] => alu_src1[0].IN5
alu_src1[1] => alu_src1[1].IN5
alu_src1[2] => alu_src1[2].IN5
alu_src1[3] => alu_src1[3].IN5
alu_src1[4] => alu_src1[4].IN5
alu_src1[5] => alu_src1[5].IN5
alu_src1[6] => alu_src1[6].IN5
alu_src1[7] => alu_src1[7].IN5
alu_src1[8] => alu_src1[8].IN5
alu_src1[9] => alu_src1[9].IN5
alu_src1[10] => alu_src1[10].IN5
alu_src1[11] => alu_src1[11].IN5
alu_src1[12] => alu_src1[12].IN5
alu_src1[13] => alu_src1[13].IN5
alu_src1[14] => alu_src1[14].IN5
alu_src1[15] => alu_src1[15].IN5
alu_src1[16] => alu_src1[16].IN5
alu_src1[17] => alu_src1[17].IN5
alu_src1[18] => alu_src1[18].IN5
alu_src1[19] => alu_src1[19].IN5
alu_src1[20] => alu_src1[20].IN5
alu_src1[21] => alu_src1[21].IN5
alu_src1[22] => alu_src1[22].IN5
alu_src1[23] => alu_src1[23].IN5
alu_src1[24] => alu_src1[24].IN5
alu_src1[25] => alu_src1[25].IN5
alu_src1[26] => alu_src1[26].IN5
alu_src1[27] => alu_src1[27].IN5
alu_src1[28] => alu_src1[28].IN5
alu_src1[29] => alu_src1[29].IN5
alu_src1[30] => alu_src1[30].IN5
alu_src1[31] => alu_src1[31].IN5
alu_src2[0] => alu_src2[0].IN5
alu_src2[1] => alu_src2[1].IN5
alu_src2[2] => alu_src2[2].IN5
alu_src2[3] => alu_src2[3].IN5
alu_src2[4] => alu_src2[4].IN5
alu_src2[5] => alu_src2[5].IN5
alu_src2[6] => alu_src2[6].IN5
alu_src2[7] => alu_src2[7].IN5
alu_src2[8] => alu_src2[8].IN5
alu_src2[9] => alu_src2[9].IN5
alu_src2[10] => alu_src2[10].IN5
alu_src2[11] => alu_src2[11].IN5
alu_src2[12] => alu_src2[12].IN5
alu_src2[13] => alu_src2[13].IN5
alu_src2[14] => alu_src2[14].IN5
alu_src2[15] => alu_src2[15].IN5
alu_src2[16] => alu_src2[16].IN5
alu_src2[17] => alu_src2[17].IN5
alu_src2[18] => alu_src2[18].IN5
alu_src2[19] => alu_src2[19].IN5
alu_src2[20] => alu_src2[20].IN5
alu_src2[21] => alu_src2[21].IN5
alu_src2[22] => alu_src2[22].IN5
alu_src2[23] => alu_src2[23].IN5
alu_src2[24] => alu_src2[24].IN5
alu_src2[25] => alu_src2[25].IN5
alu_src2[26] => alu_src2[26].IN5
alu_src2[27] => alu_src2[27].IN5
alu_src2[28] => alu_src2[28].IN5
alu_src2[29] => alu_src2[29].IN5
alu_src2[30] => alu_src2[30].IN5
alu_src2[31] => alu_src2[31].IN5
alu_ctr[0] => alu_ctr[0].IN1
alu_ctr[1] => alu_ctr[1].IN1
alu_ctr[2] => alu_ctr[2].IN1


|mips|alu:alu2|and_32bit:and_op
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|and_32bit:and_op|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|or_32bit:or_op|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|mips|alu:alu2|adder:less_op|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:less_op|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:less_op|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:less_op|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:less_op|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:less_op|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:less_op|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:less_op|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:less_op|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:less_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:less_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:less_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|mips|alu:alu2|adder:add_op|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:add_op|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:add_op|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:add_op|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:add_op|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:add_op|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:add_op|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:add_op|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:add_op|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:add_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:add_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:add_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|mips|alu:alu2|adder:sub_op|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:sub_op|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:sub_op|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:sub_op|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:sub_op|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:sub_op|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:sub_op|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:sub_op|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|mips|alu:alu2|adder:sub_op|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|mips|alu:alu2|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|adder:sub_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|adder:sub_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|adder:sub_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1
result[0] <= or_32bit:or7.port0
result[1] <= or_32bit:or7.port0
result[2] <= or_32bit:or7.port0
result[3] <= or_32bit:or7.port0
result[4] <= or_32bit:or7.port0
result[5] <= or_32bit:or7.port0
result[6] <= or_32bit:or7.port0
result[7] <= or_32bit:or7.port0
result[8] <= or_32bit:or7.port0
result[9] <= or_32bit:or7.port0
result[10] <= or_32bit:or7.port0
result[11] <= or_32bit:or7.port0
result[12] <= or_32bit:or7.port0
result[13] <= or_32bit:or7.port0
result[14] <= or_32bit:or7.port0
result[15] <= or_32bit:or7.port0
result[16] <= or_32bit:or7.port0
result[17] <= or_32bit:or7.port0
result[18] <= or_32bit:or7.port0
result[19] <= or_32bit:or7.port0
result[20] <= or_32bit:or7.port0
result[21] <= or_32bit:or7.port0
result[22] <= or_32bit:or7.port0
result[23] <= or_32bit:or7.port0
result[24] <= or_32bit:or7.port0
result[25] <= or_32bit:or7.port0
result[26] <= or_32bit:or7.port0
result[27] <= or_32bit:or7.port0
result[28] <= or_32bit:or7.port0
result[29] <= or_32bit:or7.port0
result[30] <= or_32bit:or7.port0
result[31] <= or_32bit:or7.port0
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in_0[0] => in_0[0].IN1
in_0[1] => in_0[1].IN1
in_0[2] => in_0[2].IN1
in_0[3] => in_0[3].IN1
in_0[4] => in_0[4].IN1
in_0[5] => in_0[5].IN1
in_0[6] => in_0[6].IN1
in_0[7] => in_0[7].IN1
in_0[8] => in_0[8].IN1
in_0[9] => in_0[9].IN1
in_0[10] => in_0[10].IN1
in_0[11] => in_0[11].IN1
in_0[12] => in_0[12].IN1
in_0[13] => in_0[13].IN1
in_0[14] => in_0[14].IN1
in_0[15] => in_0[15].IN1
in_0[16] => in_0[16].IN1
in_0[17] => in_0[17].IN1
in_0[18] => in_0[18].IN1
in_0[19] => in_0[19].IN1
in_0[20] => in_0[20].IN1
in_0[21] => in_0[21].IN1
in_0[22] => in_0[22].IN1
in_0[23] => in_0[23].IN1
in_0[24] => in_0[24].IN1
in_0[25] => in_0[25].IN1
in_0[26] => in_0[26].IN1
in_0[27] => in_0[27].IN1
in_0[28] => in_0[28].IN1
in_0[29] => in_0[29].IN1
in_0[30] => in_0[30].IN1
in_0[31] => in_0[31].IN1
in_1[0] => in_1[0].IN1
in_1[1] => in_1[1].IN1
in_1[2] => in_1[2].IN1
in_1[3] => in_1[3].IN1
in_1[4] => in_1[4].IN1
in_1[5] => in_1[5].IN1
in_1[6] => in_1[6].IN1
in_1[7] => in_1[7].IN1
in_1[8] => in_1[8].IN1
in_1[9] => in_1[9].IN1
in_1[10] => in_1[10].IN1
in_1[11] => in_1[11].IN1
in_1[12] => in_1[12].IN1
in_1[13] => in_1[13].IN1
in_1[14] => in_1[14].IN1
in_1[15] => in_1[15].IN1
in_1[16] => in_1[16].IN1
in_1[17] => in_1[17].IN1
in_1[18] => in_1[18].IN1
in_1[19] => in_1[19].IN1
in_1[20] => in_1[20].IN1
in_1[21] => in_1[21].IN1
in_1[22] => in_1[22].IN1
in_1[23] => in_1[23].IN1
in_1[24] => in_1[24].IN1
in_1[25] => in_1[25].IN1
in_1[26] => in_1[26].IN1
in_1[27] => in_1[27].IN1
in_1[28] => in_1[28].IN1
in_1[29] => in_1[29].IN1
in_1[30] => in_1[30].IN1
in_1[31] => in_1[31].IN1
in_2[0] => in_2[0].IN1
in_2[1] => in_2[1].IN1
in_2[2] => in_2[2].IN1
in_2[3] => in_2[3].IN1
in_2[4] => in_2[4].IN1
in_2[5] => in_2[5].IN1
in_2[6] => in_2[6].IN1
in_2[7] => in_2[7].IN1
in_2[8] => in_2[8].IN1
in_2[9] => in_2[9].IN1
in_2[10] => in_2[10].IN1
in_2[11] => in_2[11].IN1
in_2[12] => in_2[12].IN1
in_2[13] => in_2[13].IN1
in_2[14] => in_2[14].IN1
in_2[15] => in_2[15].IN1
in_2[16] => in_2[16].IN1
in_2[17] => in_2[17].IN1
in_2[18] => in_2[18].IN1
in_2[19] => in_2[19].IN1
in_2[20] => in_2[20].IN1
in_2[21] => in_2[21].IN1
in_2[22] => in_2[22].IN1
in_2[23] => in_2[23].IN1
in_2[24] => in_2[24].IN1
in_2[25] => in_2[25].IN1
in_2[26] => in_2[26].IN1
in_2[27] => in_2[27].IN1
in_2[28] => in_2[28].IN1
in_2[29] => in_2[29].IN1
in_2[30] => in_2[30].IN1
in_2[31] => in_2[31].IN1
in_3[0] => in_3[0].IN1
in_3[1] => in_3[1].IN1
in_3[2] => in_3[2].IN1
in_3[3] => in_3[3].IN1
in_3[4] => in_3[4].IN1
in_3[5] => in_3[5].IN1
in_3[6] => in_3[6].IN1
in_3[7] => in_3[7].IN1
in_3[8] => in_3[8].IN1
in_3[9] => in_3[9].IN1
in_3[10] => in_3[10].IN1
in_3[11] => in_3[11].IN1
in_3[12] => in_3[12].IN1
in_3[13] => in_3[13].IN1
in_3[14] => in_3[14].IN1
in_3[15] => in_3[15].IN1
in_3[16] => in_3[16].IN1
in_3[17] => in_3[17].IN1
in_3[18] => in_3[18].IN1
in_3[19] => in_3[19].IN1
in_3[20] => in_3[20].IN1
in_3[21] => in_3[21].IN1
in_3[22] => in_3[22].IN1
in_3[23] => in_3[23].IN1
in_3[24] => in_3[24].IN1
in_3[25] => in_3[25].IN1
in_3[26] => in_3[26].IN1
in_3[27] => in_3[27].IN1
in_3[28] => in_3[28].IN1
in_3[29] => in_3[29].IN1
in_3[30] => in_3[30].IN1
in_3[31] => in_3[31].IN1
in_4[0] => in_4[0].IN1
in_4[1] => in_4[1].IN1
in_4[2] => in_4[2].IN1
in_4[3] => in_4[3].IN1
in_4[4] => in_4[4].IN1
in_4[5] => in_4[5].IN1
in_4[6] => in_4[6].IN1
in_4[7] => in_4[7].IN1
in_4[8] => in_4[8].IN1
in_4[9] => in_4[9].IN1
in_4[10] => in_4[10].IN1
in_4[11] => in_4[11].IN1
in_4[12] => in_4[12].IN1
in_4[13] => in_4[13].IN1
in_4[14] => in_4[14].IN1
in_4[15] => in_4[15].IN1
in_4[16] => in_4[16].IN1
in_4[17] => in_4[17].IN1
in_4[18] => in_4[18].IN1
in_4[19] => in_4[19].IN1
in_4[20] => in_4[20].IN1
in_4[21] => in_4[21].IN1
in_4[22] => in_4[22].IN1
in_4[23] => in_4[23].IN1
in_4[24] => in_4[24].IN1
in_4[25] => in_4[25].IN1
in_4[26] => in_4[26].IN1
in_4[27] => in_4[27].IN1
in_4[28] => in_4[28].IN1
in_4[29] => in_4[29].IN1
in_4[30] => in_4[30].IN1
in_4[31] => in_4[31].IN1
in_5[0] => in_5[0].IN1
in_5[1] => in_5[1].IN1
in_5[2] => in_5[2].IN1
in_5[3] => in_5[3].IN1
in_5[4] => in_5[4].IN1
in_5[5] => in_5[5].IN1
in_5[6] => in_5[6].IN1
in_5[7] => in_5[7].IN1
in_5[8] => in_5[8].IN1
in_5[9] => in_5[9].IN1
in_5[10] => in_5[10].IN1
in_5[11] => in_5[11].IN1
in_5[12] => in_5[12].IN1
in_5[13] => in_5[13].IN1
in_5[14] => in_5[14].IN1
in_5[15] => in_5[15].IN1
in_5[16] => in_5[16].IN1
in_5[17] => in_5[17].IN1
in_5[18] => in_5[18].IN1
in_5[19] => in_5[19].IN1
in_5[20] => in_5[20].IN1
in_5[21] => in_5[21].IN1
in_5[22] => in_5[22].IN1
in_5[23] => in_5[23].IN1
in_5[24] => in_5[24].IN1
in_5[25] => in_5[25].IN1
in_5[26] => in_5[26].IN1
in_5[27] => in_5[27].IN1
in_5[28] => in_5[28].IN1
in_5[29] => in_5[29].IN1
in_5[30] => in_5[30].IN1
in_5[31] => in_5[31].IN1
in_6[0] => in_6[0].IN1
in_6[1] => in_6[1].IN1
in_6[2] => in_6[2].IN1
in_6[3] => in_6[3].IN1
in_6[4] => in_6[4].IN1
in_6[5] => in_6[5].IN1
in_6[6] => in_6[6].IN1
in_6[7] => in_6[7].IN1
in_6[8] => in_6[8].IN1
in_6[9] => in_6[9].IN1
in_6[10] => in_6[10].IN1
in_6[11] => in_6[11].IN1
in_6[12] => in_6[12].IN1
in_6[13] => in_6[13].IN1
in_6[14] => in_6[14].IN1
in_6[15] => in_6[15].IN1
in_6[16] => in_6[16].IN1
in_6[17] => in_6[17].IN1
in_6[18] => in_6[18].IN1
in_6[19] => in_6[19].IN1
in_6[20] => in_6[20].IN1
in_6[21] => in_6[21].IN1
in_6[22] => in_6[22].IN1
in_6[23] => in_6[23].IN1
in_6[24] => in_6[24].IN1
in_6[25] => in_6[25].IN1
in_6[26] => in_6[26].IN1
in_6[27] => in_6[27].IN1
in_6[28] => in_6[28].IN1
in_6[29] => in_6[29].IN1
in_6[30] => in_6[30].IN1
in_6[31] => in_6[31].IN1
in_7[0] => in_7[0].IN1
in_7[1] => in_7[1].IN1
in_7[2] => in_7[2].IN1
in_7[3] => in_7[3].IN1
in_7[4] => in_7[4].IN1
in_7[5] => in_7[5].IN1
in_7[6] => in_7[6].IN1
in_7[7] => in_7[7].IN1
in_7[8] => in_7[8].IN1
in_7[9] => in_7[9].IN1
in_7[10] => in_7[10].IN1
in_7[11] => in_7[11].IN1
in_7[12] => in_7[12].IN1
in_7[13] => in_7[13].IN1
in_7[14] => in_7[14].IN1
in_7[15] => in_7[15].IN1
in_7[16] => in_7[16].IN1
in_7[17] => in_7[17].IN1
in_7[18] => in_7[18].IN1
in_7[19] => in_7[19].IN1
in_7[20] => in_7[20].IN1
in_7[21] => in_7[21].IN1
in_7[22] => in_7[22].IN1
in_7[23] => in_7[23].IN1
in_7[24] => in_7[24].IN1
in_7[25] => in_7[25].IN1
in_7[26] => in_7[26].IN1
in_7[27] => in_7[27].IN1
in_7[28] => in_7[28].IN1
in_7[29] => in_7[29].IN1
in_7[30] => in_7[30].IN1
in_7[31] => in_7[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|extend_to_32:ext2
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|extend_to_32:ext3
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|extend_to_32:ext4
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|extend_to_32:ext5
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|extend_to_32:ext6
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|extend_to_32:ext7
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|extend_to_32:ext8
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|alu:alu2|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5
result[0] <= or_32bit:or0.port0
result[1] <= or_32bit:or0.port0
result[2] <= or_32bit:or0.port0
result[3] <= or_32bit:or0.port0
result[4] <= or_32bit:or0.port0
result[5] <= or_32bit:or0.port0
result[6] <= or_32bit:or0.port0
result[7] <= or_32bit:or0.port0
result[8] <= or_32bit:or0.port0
result[9] <= or_32bit:or0.port0
result[10] <= or_32bit:or0.port0
result[11] <= or_32bit:or0.port0
result[12] <= or_32bit:or0.port0
result[13] <= or_32bit:or0.port0
result[14] <= or_32bit:or0.port0
result[15] <= or_32bit:or0.port0
result[16] <= or_32bit:or0.port0
result[17] <= or_32bit:or0.port0
result[18] <= or_32bit:or0.port0
result[19] <= or_32bit:or0.port0
result[20] <= or_32bit:or0.port0
result[21] <= or_32bit:or0.port0
result[22] <= or_32bit:or0.port0
result[23] <= or_32bit:or0.port0
result[24] <= or_32bit:or0.port0
result[25] <= or_32bit:or0.port0
result[26] <= or_32bit:or0.port0
result[27] <= or_32bit:or0.port0
result[28] <= or_32bit:or0.port0
result[29] <= or_32bit:or0.port0
result[30] <= or_32bit:or0.port0
result[31] <= or_32bit:or0.port0
input0[0] => input0[0].IN1
input0[1] => input0[1].IN1
input0[2] => input0[2].IN1
input0[3] => input0[3].IN1
input0[4] => input0[4].IN1
input0[5] => input0[5].IN1
input0[6] => input0[6].IN1
input0[7] => input0[7].IN1
input0[8] => input0[8].IN1
input0[9] => input0[9].IN1
input0[10] => input0[10].IN1
input0[11] => input0[11].IN1
input0[12] => input0[12].IN1
input0[13] => input0[13].IN1
input0[14] => input0[14].IN1
input0[15] => input0[15].IN1
input0[16] => input0[16].IN1
input0[17] => input0[17].IN1
input0[18] => input0[18].IN1
input0[19] => input0[19].IN1
input0[20] => input0[20].IN1
input0[21] => input0[21].IN1
input0[22] => input0[22].IN1
input0[23] => input0[23].IN1
input0[24] => input0[24].IN1
input0[25] => input0[25].IN1
input0[26] => input0[26].IN1
input0[27] => input0[27].IN1
input0[28] => input0[28].IN1
input0[29] => input0[29].IN1
input0[30] => input0[30].IN1
input0[31] => input0[31].IN1
input1[0] => input1[0].IN1
input1[1] => input1[1].IN1
input1[2] => input1[2].IN1
input1[3] => input1[3].IN1
input1[4] => input1[4].IN1
input1[5] => input1[5].IN1
input1[6] => input1[6].IN1
input1[7] => input1[7].IN1
input1[8] => input1[8].IN1
input1[9] => input1[9].IN1
input1[10] => input1[10].IN1
input1[11] => input1[11].IN1
input1[12] => input1[12].IN1
input1[13] => input1[13].IN1
input1[14] => input1[14].IN1
input1[15] => input1[15].IN1
input1[16] => input1[16].IN1
input1[17] => input1[17].IN1
input1[18] => input1[18].IN1
input1[19] => input1[19].IN1
input1[20] => input1[20].IN1
input1[21] => input1[21].IN1
input1[22] => input1[22].IN1
input1[23] => input1[23].IN1
input1[24] => input1[24].IN1
input1[25] => input1[25].IN1
input1[26] => input1[26].IN1
input1[27] => input1[27].IN1
input1[28] => input1[28].IN1
input1[29] => input1[29].IN1
input1[30] => input1[30].IN1
input1[31] => input1[31].IN1
sel => sel.IN1


|mips|mux_2x1_32bit:mux5|extend_to_32:extend0
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux5|extend_to_32:extend1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux5|and_32bit:and0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|and_32bit:and1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux5|or_32bit:or0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6
result[0] <= or_32bit:or0.port0
result[1] <= or_32bit:or0.port0
result[2] <= or_32bit:or0.port0
result[3] <= or_32bit:or0.port0
result[4] <= or_32bit:or0.port0
result[5] <= or_32bit:or0.port0
result[6] <= or_32bit:or0.port0
result[7] <= or_32bit:or0.port0
result[8] <= or_32bit:or0.port0
result[9] <= or_32bit:or0.port0
result[10] <= or_32bit:or0.port0
result[11] <= or_32bit:or0.port0
result[12] <= or_32bit:or0.port0
result[13] <= or_32bit:or0.port0
result[14] <= or_32bit:or0.port0
result[15] <= or_32bit:or0.port0
result[16] <= or_32bit:or0.port0
result[17] <= or_32bit:or0.port0
result[18] <= or_32bit:or0.port0
result[19] <= or_32bit:or0.port0
result[20] <= or_32bit:or0.port0
result[21] <= or_32bit:or0.port0
result[22] <= or_32bit:or0.port0
result[23] <= or_32bit:or0.port0
result[24] <= or_32bit:or0.port0
result[25] <= or_32bit:or0.port0
result[26] <= or_32bit:or0.port0
result[27] <= or_32bit:or0.port0
result[28] <= or_32bit:or0.port0
result[29] <= or_32bit:or0.port0
result[30] <= or_32bit:or0.port0
result[31] <= or_32bit:or0.port0
input0[0] => input0[0].IN1
input0[1] => input0[1].IN1
input0[2] => input0[2].IN1
input0[3] => input0[3].IN1
input0[4] => input0[4].IN1
input0[5] => input0[5].IN1
input0[6] => input0[6].IN1
input0[7] => input0[7].IN1
input0[8] => input0[8].IN1
input0[9] => input0[9].IN1
input0[10] => input0[10].IN1
input0[11] => input0[11].IN1
input0[12] => input0[12].IN1
input0[13] => input0[13].IN1
input0[14] => input0[14].IN1
input0[15] => input0[15].IN1
input0[16] => input0[16].IN1
input0[17] => input0[17].IN1
input0[18] => input0[18].IN1
input0[19] => input0[19].IN1
input0[20] => input0[20].IN1
input0[21] => input0[21].IN1
input0[22] => input0[22].IN1
input0[23] => input0[23].IN1
input0[24] => input0[24].IN1
input0[25] => input0[25].IN1
input0[26] => input0[26].IN1
input0[27] => input0[27].IN1
input0[28] => input0[28].IN1
input0[29] => input0[29].IN1
input0[30] => input0[30].IN1
input0[31] => input0[31].IN1
input1[0] => input1[0].IN1
input1[1] => input1[1].IN1
input1[2] => input1[2].IN1
input1[3] => input1[3].IN1
input1[4] => input1[4].IN1
input1[5] => input1[5].IN1
input1[6] => input1[6].IN1
input1[7] => input1[7].IN1
input1[8] => input1[8].IN1
input1[9] => input1[9].IN1
input1[10] => input1[10].IN1
input1[11] => input1[11].IN1
input1[12] => input1[12].IN1
input1[13] => input1[13].IN1
input1[14] => input1[14].IN1
input1[15] => input1[15].IN1
input1[16] => input1[16].IN1
input1[17] => input1[17].IN1
input1[18] => input1[18].IN1
input1[19] => input1[19].IN1
input1[20] => input1[20].IN1
input1[21] => input1[21].IN1
input1[22] => input1[22].IN1
input1[23] => input1[23].IN1
input1[24] => input1[24].IN1
input1[25] => input1[25].IN1
input1[26] => input1[26].IN1
input1[27] => input1[27].IN1
input1[28] => input1[28].IN1
input1[29] => input1[29].IN1
input1[30] => input1[30].IN1
input1[31] => input1[31].IN1
sel => sel.IN1


|mips|mux_2x1_32bit:mux6|extend_to_32:extend0
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux6|extend_to_32:extend1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux6|and_32bit:and0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|and_32bit:and1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux6|or_32bit:or0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7
result[0] <= or_32bit:or0.port0
result[1] <= or_32bit:or0.port0
result[2] <= or_32bit:or0.port0
result[3] <= or_32bit:or0.port0
result[4] <= or_32bit:or0.port0
result[5] <= or_32bit:or0.port0
result[6] <= or_32bit:or0.port0
result[7] <= or_32bit:or0.port0
result[8] <= or_32bit:or0.port0
result[9] <= or_32bit:or0.port0
result[10] <= or_32bit:or0.port0
result[11] <= or_32bit:or0.port0
result[12] <= or_32bit:or0.port0
result[13] <= or_32bit:or0.port0
result[14] <= or_32bit:or0.port0
result[15] <= or_32bit:or0.port0
result[16] <= or_32bit:or0.port0
result[17] <= or_32bit:or0.port0
result[18] <= or_32bit:or0.port0
result[19] <= or_32bit:or0.port0
result[20] <= or_32bit:or0.port0
result[21] <= or_32bit:or0.port0
result[22] <= or_32bit:or0.port0
result[23] <= or_32bit:or0.port0
result[24] <= or_32bit:or0.port0
result[25] <= or_32bit:or0.port0
result[26] <= or_32bit:or0.port0
result[27] <= or_32bit:or0.port0
result[28] <= or_32bit:or0.port0
result[29] <= or_32bit:or0.port0
result[30] <= or_32bit:or0.port0
result[31] <= or_32bit:or0.port0
input0[0] => input0[0].IN1
input0[1] => input0[1].IN1
input0[2] => input0[2].IN1
input0[3] => input0[3].IN1
input0[4] => input0[4].IN1
input0[5] => input0[5].IN1
input0[6] => input0[6].IN1
input0[7] => input0[7].IN1
input0[8] => input0[8].IN1
input0[9] => input0[9].IN1
input0[10] => input0[10].IN1
input0[11] => input0[11].IN1
input0[12] => input0[12].IN1
input0[13] => input0[13].IN1
input0[14] => input0[14].IN1
input0[15] => input0[15].IN1
input0[16] => input0[16].IN1
input0[17] => input0[17].IN1
input0[18] => input0[18].IN1
input0[19] => input0[19].IN1
input0[20] => input0[20].IN1
input0[21] => input0[21].IN1
input0[22] => input0[22].IN1
input0[23] => input0[23].IN1
input0[24] => input0[24].IN1
input0[25] => input0[25].IN1
input0[26] => input0[26].IN1
input0[27] => input0[27].IN1
input0[28] => input0[28].IN1
input0[29] => input0[29].IN1
input0[30] => input0[30].IN1
input0[31] => input0[31].IN1
input1[0] => input1[0].IN1
input1[1] => input1[1].IN1
input1[2] => input1[2].IN1
input1[3] => input1[3].IN1
input1[4] => input1[4].IN1
input1[5] => input1[5].IN1
input1[6] => input1[6].IN1
input1[7] => input1[7].IN1
input1[8] => input1[8].IN1
input1[9] => input1[9].IN1
input1[10] => input1[10].IN1
input1[11] => input1[11].IN1
input1[12] => input1[12].IN1
input1[13] => input1[13].IN1
input1[14] => input1[14].IN1
input1[15] => input1[15].IN1
input1[16] => input1[16].IN1
input1[17] => input1[17].IN1
input1[18] => input1[18].IN1
input1[19] => input1[19].IN1
input1[20] => input1[20].IN1
input1[21] => input1[21].IN1
input1[22] => input1[22].IN1
input1[23] => input1[23].IN1
input1[24] => input1[24].IN1
input1[25] => input1[25].IN1
input1[26] => input1[26].IN1
input1[27] => input1[27].IN1
input1[28] => input1[28].IN1
input1[29] => input1[29].IN1
input1[30] => input1[30].IN1
input1[31] => input1[31].IN1
sel => sel.IN1


|mips|mux_2x1_32bit:mux7|extend_to_32:extend0
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux7|extend_to_32:extend1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux7|and_32bit:and0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|and_32bit:and1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux7|or_32bit:or0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8
result[0] <= or_32bit:or0.port0
result[1] <= or_32bit:or0.port0
result[2] <= or_32bit:or0.port0
result[3] <= or_32bit:or0.port0
result[4] <= or_32bit:or0.port0
result[5] <= or_32bit:or0.port0
result[6] <= or_32bit:or0.port0
result[7] <= or_32bit:or0.port0
result[8] <= or_32bit:or0.port0
result[9] <= or_32bit:or0.port0
result[10] <= or_32bit:or0.port0
result[11] <= or_32bit:or0.port0
result[12] <= or_32bit:or0.port0
result[13] <= or_32bit:or0.port0
result[14] <= or_32bit:or0.port0
result[15] <= or_32bit:or0.port0
result[16] <= or_32bit:or0.port0
result[17] <= or_32bit:or0.port0
result[18] <= or_32bit:or0.port0
result[19] <= or_32bit:or0.port0
result[20] <= or_32bit:or0.port0
result[21] <= or_32bit:or0.port0
result[22] <= or_32bit:or0.port0
result[23] <= or_32bit:or0.port0
result[24] <= or_32bit:or0.port0
result[25] <= or_32bit:or0.port0
result[26] <= or_32bit:or0.port0
result[27] <= or_32bit:or0.port0
result[28] <= or_32bit:or0.port0
result[29] <= or_32bit:or0.port0
result[30] <= or_32bit:or0.port0
result[31] <= or_32bit:or0.port0
input0[0] => input0[0].IN1
input0[1] => input0[1].IN1
input0[2] => input0[2].IN1
input0[3] => input0[3].IN1
input0[4] => input0[4].IN1
input0[5] => input0[5].IN1
input0[6] => input0[6].IN1
input0[7] => input0[7].IN1
input0[8] => input0[8].IN1
input0[9] => input0[9].IN1
input0[10] => input0[10].IN1
input0[11] => input0[11].IN1
input0[12] => input0[12].IN1
input0[13] => input0[13].IN1
input0[14] => input0[14].IN1
input0[15] => input0[15].IN1
input0[16] => input0[16].IN1
input0[17] => input0[17].IN1
input0[18] => input0[18].IN1
input0[19] => input0[19].IN1
input0[20] => input0[20].IN1
input0[21] => input0[21].IN1
input0[22] => input0[22].IN1
input0[23] => input0[23].IN1
input0[24] => input0[24].IN1
input0[25] => input0[25].IN1
input0[26] => input0[26].IN1
input0[27] => input0[27].IN1
input0[28] => input0[28].IN1
input0[29] => input0[29].IN1
input0[30] => input0[30].IN1
input0[31] => input0[31].IN1
input1[0] => input1[0].IN1
input1[1] => input1[1].IN1
input1[2] => input1[2].IN1
input1[3] => input1[3].IN1
input1[4] => input1[4].IN1
input1[5] => input1[5].IN1
input1[6] => input1[6].IN1
input1[7] => input1[7].IN1
input1[8] => input1[8].IN1
input1[9] => input1[9].IN1
input1[10] => input1[10].IN1
input1[11] => input1[11].IN1
input1[12] => input1[12].IN1
input1[13] => input1[13].IN1
input1[14] => input1[14].IN1
input1[15] => input1[15].IN1
input1[16] => input1[16].IN1
input1[17] => input1[17].IN1
input1[18] => input1[18].IN1
input1[19] => input1[19].IN1
input1[20] => input1[20].IN1
input1[21] => input1[21].IN1
input1[22] => input1[22].IN1
input1[23] => input1[23].IN1
input1[24] => input1[24].IN1
input1[25] => input1[25].IN1
input1[26] => input1[26].IN1
input1[27] => input1[27].IN1
input1[28] => input1[28].IN1
input1[29] => input1[29].IN1
input1[30] => input1[30].IN1
input1[31] => input1[31].IN1
sel => sel.IN1


|mips|mux_2x1_32bit:mux8|extend_to_32:extend0
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux8|extend_to_32:extend1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux8|and_32bit:and0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|and_32bit:and1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux8|or_32bit:or0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9
result[0] <= or_32bit:or0.port0
result[1] <= or_32bit:or0.port0
result[2] <= or_32bit:or0.port0
result[3] <= or_32bit:or0.port0
result[4] <= or_32bit:or0.port0
result[5] <= or_32bit:or0.port0
result[6] <= or_32bit:or0.port0
result[7] <= or_32bit:or0.port0
result[8] <= or_32bit:or0.port0
result[9] <= or_32bit:or0.port0
result[10] <= or_32bit:or0.port0
result[11] <= or_32bit:or0.port0
result[12] <= or_32bit:or0.port0
result[13] <= or_32bit:or0.port0
result[14] <= or_32bit:or0.port0
result[15] <= or_32bit:or0.port0
result[16] <= or_32bit:or0.port0
result[17] <= or_32bit:or0.port0
result[18] <= or_32bit:or0.port0
result[19] <= or_32bit:or0.port0
result[20] <= or_32bit:or0.port0
result[21] <= or_32bit:or0.port0
result[22] <= or_32bit:or0.port0
result[23] <= or_32bit:or0.port0
result[24] <= or_32bit:or0.port0
result[25] <= or_32bit:or0.port0
result[26] <= or_32bit:or0.port0
result[27] <= or_32bit:or0.port0
result[28] <= or_32bit:or0.port0
result[29] <= or_32bit:or0.port0
result[30] <= or_32bit:or0.port0
result[31] <= or_32bit:or0.port0
input0[0] => input0[0].IN1
input0[1] => input0[1].IN1
input0[2] => input0[2].IN1
input0[3] => input0[3].IN1
input0[4] => input0[4].IN1
input0[5] => input0[5].IN1
input0[6] => input0[6].IN1
input0[7] => input0[7].IN1
input0[8] => input0[8].IN1
input0[9] => input0[9].IN1
input0[10] => input0[10].IN1
input0[11] => input0[11].IN1
input0[12] => input0[12].IN1
input0[13] => input0[13].IN1
input0[14] => input0[14].IN1
input0[15] => input0[15].IN1
input0[16] => input0[16].IN1
input0[17] => input0[17].IN1
input0[18] => input0[18].IN1
input0[19] => input0[19].IN1
input0[20] => input0[20].IN1
input0[21] => input0[21].IN1
input0[22] => input0[22].IN1
input0[23] => input0[23].IN1
input0[24] => input0[24].IN1
input0[25] => input0[25].IN1
input0[26] => input0[26].IN1
input0[27] => input0[27].IN1
input0[28] => input0[28].IN1
input0[29] => input0[29].IN1
input0[30] => input0[30].IN1
input0[31] => input0[31].IN1
input1[0] => input1[0].IN1
input1[1] => input1[1].IN1
input1[2] => input1[2].IN1
input1[3] => input1[3].IN1
input1[4] => input1[4].IN1
input1[5] => input1[5].IN1
input1[6] => input1[6].IN1
input1[7] => input1[7].IN1
input1[8] => input1[8].IN1
input1[9] => input1[9].IN1
input1[10] => input1[10].IN1
input1[11] => input1[11].IN1
input1[12] => input1[12].IN1
input1[13] => input1[13].IN1
input1[14] => input1[14].IN1
input1[15] => input1[15].IN1
input1[16] => input1[16].IN1
input1[17] => input1[17].IN1
input1[18] => input1[18].IN1
input1[19] => input1[19].IN1
input1[20] => input1[20].IN1
input1[21] => input1[21].IN1
input1[22] => input1[22].IN1
input1[23] => input1[23].IN1
input1[24] => input1[24].IN1
input1[25] => input1[25].IN1
input1[26] => input1[26].IN1
input1[27] => input1[27].IN1
input1[28] => input1[28].IN1
input1[29] => input1[29].IN1
input1[30] => input1[30].IN1
input1[31] => input1[31].IN1
sel => sel.IN1


|mips|mux_2x1_32bit:mux9|extend_to_32:extend0
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux9|extend_to_32:extend1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|mips|mux_2x1_32bit:mux9|and_32bit:and0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|and_32bit:and1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|mips|mux_2x1_32bit:mux9|or_32bit:or0|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


