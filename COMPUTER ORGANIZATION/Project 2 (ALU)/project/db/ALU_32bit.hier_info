|alu
Result[0] << mux_8x1_32bit:mux1.port0
Result[1] << mux_8x1_32bit:mux1.port0
Result[2] << mux_8x1_32bit:mux1.port0
Result[3] << mux_8x1_32bit:mux1.port0
Result[4] << mux_8x1_32bit:mux1.port0
Result[5] << mux_8x1_32bit:mux1.port0
Result[6] << mux_8x1_32bit:mux1.port0
Result[7] << mux_8x1_32bit:mux1.port0
Result[8] << mux_8x1_32bit:mux1.port0
Result[9] << mux_8x1_32bit:mux1.port0
Result[10] << mux_8x1_32bit:mux1.port0
Result[11] << mux_8x1_32bit:mux1.port0
Result[12] << mux_8x1_32bit:mux1.port0
Result[13] << mux_8x1_32bit:mux1.port0
Result[14] << mux_8x1_32bit:mux1.port0
Result[15] << mux_8x1_32bit:mux1.port0
Result[16] << mux_8x1_32bit:mux1.port0
Result[17] << mux_8x1_32bit:mux1.port0
Result[18] << mux_8x1_32bit:mux1.port0
Result[19] << mux_8x1_32bit:mux1.port0
Result[20] << mux_8x1_32bit:mux1.port0
Result[21] << mux_8x1_32bit:mux1.port0
Result[22] << mux_8x1_32bit:mux1.port0
Result[23] << mux_8x1_32bit:mux1.port0
Result[24] << mux_8x1_32bit:mux1.port0
Result[25] << mux_8x1_32bit:mux1.port0
Result[26] << mux_8x1_32bit:mux1.port0
Result[27] << mux_8x1_32bit:mux1.port0
Result[28] << mux_8x1_32bit:mux1.port0
Result[29] << mux_8x1_32bit:mux1.port0
Result[30] << mux_8x1_32bit:mux1.port0
Result[31] << mux_8x1_32bit:mux1.port0
A[0] => A[0].IN8
A[1] => A[1].IN8
A[2] => A[2].IN8
A[3] => A[3].IN8
A[4] => A[4].IN8
A[5] => A[5].IN8
A[6] => A[6].IN8
A[7] => A[7].IN8
A[8] => A[8].IN8
A[9] => A[9].IN8
A[10] => A[10].IN8
A[11] => A[11].IN8
A[12] => A[12].IN8
A[13] => A[13].IN8
A[14] => A[14].IN8
A[15] => A[15].IN8
A[16] => A[16].IN8
A[17] => A[17].IN8
A[18] => A[18].IN8
A[19] => A[19].IN8
A[20] => A[20].IN8
A[21] => A[21].IN8
A[22] => A[22].IN8
A[23] => A[23].IN8
A[24] => A[24].IN8
A[25] => A[25].IN8
A[26] => A[26].IN8
A[27] => A[27].IN8
A[28] => A[28].IN8
A[29] => A[29].IN8
A[30] => A[30].IN8
A[31] => A[31].IN8
B[0] => B[0].IN8
B[1] => B[1].IN8
B[2] => B[2].IN8
B[3] => B[3].IN8
B[4] => B[4].IN8
B[5] => B[5].IN8
B[6] => B[6].IN8
B[7] => B[7].IN8
B[8] => B[8].IN8
B[9] => B[9].IN8
B[10] => B[10].IN8
B[11] => B[11].IN8
B[12] => B[12].IN8
B[13] => B[13].IN8
B[14] => B[14].IN8
B[15] => B[15].IN8
B[16] => B[16].IN8
B[17] => B[17].IN8
B[18] => B[18].IN8
B[19] => B[19].IN8
B[20] => B[20].IN8
B[21] => B[21].IN8
B[22] => B[22].IN8
B[23] => B[23].IN8
B[24] => B[24].IN8
B[25] => B[25].IN8
B[26] => B[26].IN8
B[27] => B[27].IN8
B[28] => B[28].IN8
B[29] => B[29].IN8
B[30] => B[30].IN8
B[31] => B[31].IN8
ALUop[0] => ALUop[0].IN1
ALUop[1] => ALUop[1].IN1
ALUop[2] => ALUop[2].IN1
clk => clk.IN1
reset => reset.IN1


|alu|extend_to_32:ex1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|and_32bit:and_op
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|and_32bit:and_op|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|and_32bit:and_op|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|and_32bit:and_op|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|and_32bit:and_op|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|or_32bit:or_op|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|or_32bit:or_op|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|or_32bit:or_op|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|or_32bit:or_op|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|xor_32bit:xor_op|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|nor_32bit:nor_op|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|alu|adder:less_op|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|adder:less_op|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:less_op|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:less_op|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:less_op|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:less_op|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:less_op|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:less_op|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:less_op|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:less_op|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|alu|adder:less_op|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:less_op|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:less_op|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:less_op|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:less_op|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:less_op|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:less_op|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:less_op|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:less_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:less_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:less_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|alu|adder:add_op|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|adder:add_op|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:add_op|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:add_op|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:add_op|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:add_op|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:add_op|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:add_op|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:add_op|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:add_op|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|alu|adder:add_op|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:add_op|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:add_op|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:add_op|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:add_op|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:add_op|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:add_op|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:add_op|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:add_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:add_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:add_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|alu|adder:sub_op|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|adder:sub_op|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:sub_op|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:sub_op|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:sub_op|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:sub_op|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:sub_op|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:sub_op|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:sub_op|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|adder:sub_op|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|alu|adder:sub_op|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|adder:sub_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|adder:sub_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|adder:sub_op|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op
Result[0] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[1] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[2] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[3] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[4] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[5] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[6] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[7] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[8] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[9] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[10] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[11] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[12] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[13] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[14] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[15] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[16] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[17] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[18] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[19] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[20] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[21] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[22] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[23] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[24] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[25] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[26] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[27] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[28] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[29] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[30] <= Result.DB_MAX_OUTPUT_PORT_TYPE
Result[31] <= Result.DB_MAX_OUTPUT_PORT_TYPE
clk => clk.IN2
reset => reset.IN1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
b[16] => b[16].IN1
b[17] => b[17].IN1
b[18] => b[18].IN1
b[19] => b[19].IN1
b[20] => b[20].IN1
b[21] => b[21].IN1
b[22] => b[22].IN1
b[23] => b[23].IN1
b[24] => b[24].IN1
b[25] => b[25].IN1
b[26] => b[26].IN1
b[27] => b[27].IN1
b[28] => b[28].IN1
b[29] => b[29].IN1
b[30] => b[30].IN1
b[31] => b[31].IN1


|alu|mod:mod_op|mod_cu:cu
reset => curr_state.OUTPUTSELECT
reset => curr_state.OUTPUTSELECT
reset => curr_state.ADD.DATAIN
CLK => curr_state~1.DATAIN
x => Selector1.IN2
x => Selector0.IN2
we <= we.DB_MAX_OUTPUT_PORT_TYPE
s <= s.DB_MAX_OUTPUT_PORT_TYPE
result <= result$latch.DB_MAX_OUTPUT_PORT_TYPE


|alu|mod:mod_op|mod_dp:dp
CLK => temp[0].CLK
CLK => temp[1].CLK
CLK => temp[2].CLK
CLK => temp[3].CLK
CLK => temp[4].CLK
CLK => temp[5].CLK
CLK => temp[6].CLK
CLK => temp[7].CLK
CLK => temp[8].CLK
CLK => temp[9].CLK
CLK => temp[10].CLK
CLK => temp[11].CLK
CLK => temp[12].CLK
CLK => temp[13].CLK
CLK => temp[14].CLK
CLK => temp[15].CLK
CLK => temp[16].CLK
CLK => temp[17].CLK
CLK => temp[18].CLK
CLK => temp[19].CLK
CLK => temp[20].CLK
CLK => temp[21].CLK
CLK => temp[22].CLK
CLK => temp[23].CLK
CLK => temp[24].CLK
CLK => temp[25].CLK
CLK => temp[26].CLK
CLK => temp[27].CLK
CLK => temp[28].CLK
CLK => temp[29].CLK
CLK => temp[30].CLK
CLK => temp[31].CLK
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
s => mux_out1.OUTPUTSELECT
we => temp[0].ENA
we => temp[1].ENA
we => temp[2].ENA
we => temp[3].ENA
we => temp[4].ENA
we => temp[5].ENA
we => temp[6].ENA
we => temp[7].ENA
we => temp[8].ENA
we => temp[9].ENA
we => temp[10].ENA
we => temp[11].ENA
we => temp[12].ENA
we => temp[13].ENA
we => temp[14].ENA
we => temp[15].ENA
we => temp[16].ENA
we => temp[17].ENA
we => temp[18].ENA
we => temp[19].ENA
we => temp[20].ENA
we => temp[21].ENA
we => temp[22].ENA
we => temp[23].ENA
we => temp[24].ENA
we => temp[25].ENA
we => temp[26].ENA
we => temp[27].ENA
we => temp[28].ENA
we => temp[29].ENA
we => temp[30].ENA
we => temp[31].ENA
a[0] => mux_out1.DATAA
a[1] => mux_out1.DATAA
a[2] => mux_out1.DATAA
a[3] => mux_out1.DATAA
a[4] => mux_out1.DATAA
a[5] => mux_out1.DATAA
a[6] => mux_out1.DATAA
a[7] => mux_out1.DATAA
a[8] => mux_out1.DATAA
a[9] => mux_out1.DATAA
a[10] => mux_out1.DATAA
a[11] => mux_out1.DATAA
a[12] => mux_out1.DATAA
a[13] => mux_out1.DATAA
a[14] => mux_out1.DATAA
a[15] => mux_out1.DATAA
a[16] => mux_out1.DATAA
a[17] => mux_out1.DATAA
a[18] => mux_out1.DATAA
a[19] => mux_out1.DATAA
a[20] => mux_out1.DATAA
a[21] => mux_out1.DATAA
a[22] => mux_out1.DATAA
a[23] => mux_out1.DATAA
a[24] => mux_out1.DATAA
a[25] => mux_out1.DATAA
a[26] => mux_out1.DATAA
a[27] => mux_out1.DATAA
a[28] => mux_out1.DATAA
a[29] => mux_out1.DATAA
a[30] => mux_out1.DATAA
a[31] => mux_out1.DATAA
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
x <= adder:comparison.port0
result_final[0] <= temp[0].DB_MAX_OUTPUT_PORT_TYPE
result_final[1] <= temp[1].DB_MAX_OUTPUT_PORT_TYPE
result_final[2] <= temp[2].DB_MAX_OUTPUT_PORT_TYPE
result_final[3] <= temp[3].DB_MAX_OUTPUT_PORT_TYPE
result_final[4] <= temp[4].DB_MAX_OUTPUT_PORT_TYPE
result_final[5] <= temp[5].DB_MAX_OUTPUT_PORT_TYPE
result_final[6] <= temp[6].DB_MAX_OUTPUT_PORT_TYPE
result_final[7] <= temp[7].DB_MAX_OUTPUT_PORT_TYPE
result_final[8] <= temp[8].DB_MAX_OUTPUT_PORT_TYPE
result_final[9] <= temp[9].DB_MAX_OUTPUT_PORT_TYPE
result_final[10] <= temp[10].DB_MAX_OUTPUT_PORT_TYPE
result_final[11] <= temp[11].DB_MAX_OUTPUT_PORT_TYPE
result_final[12] <= temp[12].DB_MAX_OUTPUT_PORT_TYPE
result_final[13] <= temp[13].DB_MAX_OUTPUT_PORT_TYPE
result_final[14] <= temp[14].DB_MAX_OUTPUT_PORT_TYPE
result_final[15] <= temp[15].DB_MAX_OUTPUT_PORT_TYPE
result_final[16] <= temp[16].DB_MAX_OUTPUT_PORT_TYPE
result_final[17] <= temp[17].DB_MAX_OUTPUT_PORT_TYPE
result_final[18] <= temp[18].DB_MAX_OUTPUT_PORT_TYPE
result_final[19] <= temp[19].DB_MAX_OUTPUT_PORT_TYPE
result_final[20] <= temp[20].DB_MAX_OUTPUT_PORT_TYPE
result_final[21] <= temp[21].DB_MAX_OUTPUT_PORT_TYPE
result_final[22] <= temp[22].DB_MAX_OUTPUT_PORT_TYPE
result_final[23] <= temp[23].DB_MAX_OUTPUT_PORT_TYPE
result_final[24] <= temp[24].DB_MAX_OUTPUT_PORT_TYPE
result_final[25] <= temp[25].DB_MAX_OUTPUT_PORT_TYPE
result_final[26] <= temp[26].DB_MAX_OUTPUT_PORT_TYPE
result_final[27] <= temp[27].DB_MAX_OUTPUT_PORT_TYPE
result_final[28] <= temp[28].DB_MAX_OUTPUT_PORT_TYPE
result_final[29] <= temp[29].DB_MAX_OUTPUT_PORT_TYPE
result_final[30] <= temp[30].DB_MAX_OUTPUT_PORT_TYPE
result_final[31] <= temp[31].DB_MAX_OUTPUT_PORT_TYPE


|alu|mod:mod_op|mod_dp:dp|adder:substract
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:substract|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison
r[0] <= cla_4bit:cla1.port0
r[1] <= cla_4bit:cla1.port0
r[2] <= cla_4bit:cla1.port0
r[3] <= cla_4bit:cla1.port0
r[4] <= cla_4bit:cla2.port0
r[5] <= cla_4bit:cla2.port0
r[6] <= cla_4bit:cla2.port0
r[7] <= cla_4bit:cla2.port0
r[8] <= cla_4bit:cla3.port0
r[9] <= cla_4bit:cla3.port0
r[10] <= cla_4bit:cla3.port0
r[11] <= cla_4bit:cla3.port0
r[12] <= cla_4bit:cla4.port0
r[13] <= cla_4bit:cla4.port0
r[14] <= cla_4bit:cla4.port0
r[15] <= cla_4bit:cla4.port0
r[16] <= cla_4bit:cla5.port0
r[17] <= cla_4bit:cla5.port0
r[18] <= cla_4bit:cla5.port0
r[19] <= cla_4bit:cla5.port0
r[20] <= cla_4bit:cla6.port0
r[21] <= cla_4bit:cla6.port0
r[22] <= cla_4bit:cla6.port0
r[23] <= cla_4bit:cla6.port0
r[24] <= cla_4bit:cla7.port0
r[25] <= cla_4bit:cla7.port0
r[26] <= cla_4bit:cla7.port0
r[27] <= cla_4bit:cla7.port0
r[28] <= msb_cla_4bit:cla8.port0
r[29] <= msb_cla_4bit:cla8.port0
r[30] <= msb_cla_4bit:cla8.port0
r[31] <= msb_cla_4bit:cla8.port0
c32 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN2
a[1] => a[1].IN2
a[2] => a[2].IN2
a[3] => a[3].IN2
a[4] => a[4].IN2
a[5] => a[5].IN2
a[6] => a[6].IN2
a[7] => a[7].IN2
a[8] => a[8].IN2
a[9] => a[9].IN2
a[10] => a[10].IN2
a[11] => a[11].IN2
a[12] => a[12].IN2
a[13] => a[13].IN2
a[14] => a[14].IN2
a[15] => a[15].IN2
a[16] => a[16].IN2
a[17] => a[17].IN2
a[18] => a[18].IN2
a[19] => a[19].IN2
a[20] => a[20].IN2
a[21] => a[21].IN2
a[22] => a[22].IN2
a[23] => a[23].IN2
a[24] => a[24].IN2
a[25] => a[25].IN2
a[26] => a[26].IN2
a[27] => a[27].IN2
a[28] => a[28].IN2
a[29] => a[29].IN2
a[30] => a[30].IN2
a[31] => a[31].IN2
b[0] => b[0].IN2
b[1] => b[1].IN2
b[2] => b[2].IN2
b[3] => b[3].IN2
b[4] => b[4].IN2
b[5] => b[5].IN2
b[6] => b[6].IN2
b[7] => b[7].IN2
b[8] => b[8].IN2
b[9] => b[9].IN2
b[10] => b[10].IN2
b[11] => b[11].IN2
b[12] => b[12].IN2
b[13] => b[13].IN2
b[14] => b[14].IN2
b[15] => b[15].IN2
b[16] => b[16].IN2
b[17] => b[17].IN2
b[18] => b[18].IN2
b[19] => b[19].IN2
b[20] => b[20].IN2
b[21] => b[21].IN2
b[22] => b[22].IN2
b[23] => b[23].IN2
b[24] => b[24].IN2
b[25] => b[25].IN2
b[26] => b[26].IN2
b[27] => b[27].IN2
b[28] => b[28].IN2
b[29] => b[29].IN2
b[30] => b[30].IN2
b[31] => b[31].IN2
ALUop[0] => ALUop[0].IN8
ALUop[1] => ALUop[1].IN8
ALUop[2] => ALUop[2].IN8
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|xor_32bit:xor32_1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|generate_propagate_4bit:gp1
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|generate_propagate_4bit:gp2
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|generate_propagate_4bit:gp3
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|generate_propagate_4bit:gp4
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|generate_propagate_4bit:gp5
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|generate_propagate_4bit:gp6
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|generate_propagate_4bit:gp7
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|generate_propagate_4bit:gp8
g_3_0 <= or7.DB_MAX_OUTPUT_PORT_TYPE
p_3_0 <= and7.DB_MAX_OUTPUT_PORT_TYPE
a[0] => and4.IN0
a[0] => or4.IN0
a[1] => and3.IN0
a[1] => or3.IN0
a[2] => and2.IN0
a[2] => or2.IN0
a[3] => and1.IN0
a[3] => or1.IN0
b[0] => and4.IN1
b[0] => or4.IN1
b[1] => and3.IN1
b[1] => or3.IN1
b[2] => and2.IN1
b[2] => or2.IN1
b[3] => and1.IN1
b[3] => or1.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|and_31bit:andforless
result[0] <= and1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= and2.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= and3.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= and4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= and5.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= and6.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= and7.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= and8.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= and9.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= and10.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= and11.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= and12.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= and13.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= and14.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= and15.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= and16.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= and17.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= and18.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= and19.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= and20.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= and21.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= and22.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= and23.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= and24.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= and25.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= and26.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= and27.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= and28.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= and29.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= and30.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= and31.DB_MAX_OUTPUT_PORT_TYPE
A[0] => and1.IN0
A[1] => and2.IN0
A[2] => and3.IN0
A[3] => and4.IN0
A[4] => and5.IN0
A[5] => and6.IN0
A[6] => and7.IN0
A[7] => and8.IN0
A[8] => and9.IN0
A[9] => and10.IN0
A[10] => and11.IN0
A[11] => and12.IN0
A[12] => and13.IN0
A[13] => and14.IN0
A[14] => and15.IN0
A[15] => and16.IN0
A[16] => and17.IN0
A[17] => and18.IN0
A[18] => and19.IN0
A[19] => and20.IN0
A[20] => and21.IN0
A[21] => and22.IN0
A[22] => and23.IN0
A[23] => and24.IN0
A[24] => and25.IN0
A[25] => and26.IN0
A[26] => and27.IN0
A[27] => and28.IN0
A[28] => and29.IN0
A[29] => and30.IN0
A[30] => and31.IN0
B[0] => and1.IN1
B[1] => and2.IN1
B[2] => and3.IN1
B[3] => and4.IN1
B[4] => and5.IN1
B[5] => and6.IN1
B[6] => and7.IN1
B[7] => and8.IN1
B[8] => and9.IN1
B[9] => and10.IN1
B[10] => and11.IN1
B[11] => and12.IN1
B[12] => and13.IN1
B[13] => and14.IN1
B[14] => and15.IN1
B[15] => and16.IN1
B[16] => and17.IN1
B[17] => and18.IN1
B[18] => and19.IN1
B[19] => and20.IN1
B[20] => and21.IN1
B[21] => and22.IN1
B[22] => and23.IN1
B[23] => and24.IN1
B[24] => and25.IN1
B[25] => and26.IN1
B[26] => and27.IN1
B[27] => and28.IN1
B[28] => and29.IN1
B[29] => and30.IN1
B[30] => and31.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla1
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla2
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla3
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla4
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla5
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla6
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla7
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|cla_4bit:cla7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|msb_cla_4bit:cla8
r[0] <= alu_1_bit:alu1.result
r[1] <= alu_1_bit:alu2.result
r[2] <= alu_1_bit:alu3.result
r[3] <= msb_alu_1_bit:alu4.result
c4 <= or8.DB_MAX_OUTPUT_PORT_TYPE
set <= msb_alu_1_bit:alu4.set
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
less[0] => less[0].IN1
less[1] => less[1].IN1
less[2] => less[2].IN1
less[3] => less[3].IN1
ALUop[0] => ALUop[0].IN4
ALUop[1] => ALUop[1].IN4
ALUop[2] => ALUop[2].IN4
c0 => c0.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|msb_cla_4bit:cla8|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|msb_cla_4bit:cla8|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|msb_cla_4bit:cla8|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|msb_cla_4bit:cla8|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|msb_cla_4bit:cla8|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|msb_cla_4bit:cla8|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|msb_cla_4bit:cla8|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|msb_cla_4bit:cla8|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|msb_cla_4bit:cla8|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|msb_cla_4bit:cla8|msb_alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
set <= xor4.DB_MAX_OUTPUT_PORT_TYPE
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mod:mod_op|mod_dp:dp|adder:comparison|msb_cla_4bit:cla8|msb_alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1
result[0] <= or_32bit:or7.port0
result[1] <= or_32bit:or7.port0
result[2] <= or_32bit:or7.port0
result[3] <= or_32bit:or7.port0
result[4] <= or_32bit:or7.port0
result[5] <= or_32bit:or7.port0
result[6] <= or_32bit:or7.port0
result[7] <= or_32bit:or7.port0
result[8] <= or_32bit:or7.port0
result[9] <= or_32bit:or7.port0
result[10] <= or_32bit:or7.port0
result[11] <= or_32bit:or7.port0
result[12] <= or_32bit:or7.port0
result[13] <= or_32bit:or7.port0
result[14] <= or_32bit:or7.port0
result[15] <= or_32bit:or7.port0
result[16] <= or_32bit:or7.port0
result[17] <= or_32bit:or7.port0
result[18] <= or_32bit:or7.port0
result[19] <= or_32bit:or7.port0
result[20] <= or_32bit:or7.port0
result[21] <= or_32bit:or7.port0
result[22] <= or_32bit:or7.port0
result[23] <= or_32bit:or7.port0
result[24] <= or_32bit:or7.port0
result[25] <= or_32bit:or7.port0
result[26] <= or_32bit:or7.port0
result[27] <= or_32bit:or7.port0
result[28] <= or_32bit:or7.port0
result[29] <= or_32bit:or7.port0
result[30] <= or_32bit:or7.port0
result[31] <= or_32bit:or7.port0
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in_0[0] => in_0[0].IN1
in_0[1] => in_0[1].IN1
in_0[2] => in_0[2].IN1
in_0[3] => in_0[3].IN1
in_0[4] => in_0[4].IN1
in_0[5] => in_0[5].IN1
in_0[6] => in_0[6].IN1
in_0[7] => in_0[7].IN1
in_0[8] => in_0[8].IN1
in_0[9] => in_0[9].IN1
in_0[10] => in_0[10].IN1
in_0[11] => in_0[11].IN1
in_0[12] => in_0[12].IN1
in_0[13] => in_0[13].IN1
in_0[14] => in_0[14].IN1
in_0[15] => in_0[15].IN1
in_0[16] => in_0[16].IN1
in_0[17] => in_0[17].IN1
in_0[18] => in_0[18].IN1
in_0[19] => in_0[19].IN1
in_0[20] => in_0[20].IN1
in_0[21] => in_0[21].IN1
in_0[22] => in_0[22].IN1
in_0[23] => in_0[23].IN1
in_0[24] => in_0[24].IN1
in_0[25] => in_0[25].IN1
in_0[26] => in_0[26].IN1
in_0[27] => in_0[27].IN1
in_0[28] => in_0[28].IN1
in_0[29] => in_0[29].IN1
in_0[30] => in_0[30].IN1
in_0[31] => in_0[31].IN1
in_1[0] => in_1[0].IN1
in_1[1] => in_1[1].IN1
in_1[2] => in_1[2].IN1
in_1[3] => in_1[3].IN1
in_1[4] => in_1[4].IN1
in_1[5] => in_1[5].IN1
in_1[6] => in_1[6].IN1
in_1[7] => in_1[7].IN1
in_1[8] => in_1[8].IN1
in_1[9] => in_1[9].IN1
in_1[10] => in_1[10].IN1
in_1[11] => in_1[11].IN1
in_1[12] => in_1[12].IN1
in_1[13] => in_1[13].IN1
in_1[14] => in_1[14].IN1
in_1[15] => in_1[15].IN1
in_1[16] => in_1[16].IN1
in_1[17] => in_1[17].IN1
in_1[18] => in_1[18].IN1
in_1[19] => in_1[19].IN1
in_1[20] => in_1[20].IN1
in_1[21] => in_1[21].IN1
in_1[22] => in_1[22].IN1
in_1[23] => in_1[23].IN1
in_1[24] => in_1[24].IN1
in_1[25] => in_1[25].IN1
in_1[26] => in_1[26].IN1
in_1[27] => in_1[27].IN1
in_1[28] => in_1[28].IN1
in_1[29] => in_1[29].IN1
in_1[30] => in_1[30].IN1
in_1[31] => in_1[31].IN1
in_2[0] => in_2[0].IN1
in_2[1] => in_2[1].IN1
in_2[2] => in_2[2].IN1
in_2[3] => in_2[3].IN1
in_2[4] => in_2[4].IN1
in_2[5] => in_2[5].IN1
in_2[6] => in_2[6].IN1
in_2[7] => in_2[7].IN1
in_2[8] => in_2[8].IN1
in_2[9] => in_2[9].IN1
in_2[10] => in_2[10].IN1
in_2[11] => in_2[11].IN1
in_2[12] => in_2[12].IN1
in_2[13] => in_2[13].IN1
in_2[14] => in_2[14].IN1
in_2[15] => in_2[15].IN1
in_2[16] => in_2[16].IN1
in_2[17] => in_2[17].IN1
in_2[18] => in_2[18].IN1
in_2[19] => in_2[19].IN1
in_2[20] => in_2[20].IN1
in_2[21] => in_2[21].IN1
in_2[22] => in_2[22].IN1
in_2[23] => in_2[23].IN1
in_2[24] => in_2[24].IN1
in_2[25] => in_2[25].IN1
in_2[26] => in_2[26].IN1
in_2[27] => in_2[27].IN1
in_2[28] => in_2[28].IN1
in_2[29] => in_2[29].IN1
in_2[30] => in_2[30].IN1
in_2[31] => in_2[31].IN1
in_3[0] => in_3[0].IN1
in_3[1] => in_3[1].IN1
in_3[2] => in_3[2].IN1
in_3[3] => in_3[3].IN1
in_3[4] => in_3[4].IN1
in_3[5] => in_3[5].IN1
in_3[6] => in_3[6].IN1
in_3[7] => in_3[7].IN1
in_3[8] => in_3[8].IN1
in_3[9] => in_3[9].IN1
in_3[10] => in_3[10].IN1
in_3[11] => in_3[11].IN1
in_3[12] => in_3[12].IN1
in_3[13] => in_3[13].IN1
in_3[14] => in_3[14].IN1
in_3[15] => in_3[15].IN1
in_3[16] => in_3[16].IN1
in_3[17] => in_3[17].IN1
in_3[18] => in_3[18].IN1
in_3[19] => in_3[19].IN1
in_3[20] => in_3[20].IN1
in_3[21] => in_3[21].IN1
in_3[22] => in_3[22].IN1
in_3[23] => in_3[23].IN1
in_3[24] => in_3[24].IN1
in_3[25] => in_3[25].IN1
in_3[26] => in_3[26].IN1
in_3[27] => in_3[27].IN1
in_3[28] => in_3[28].IN1
in_3[29] => in_3[29].IN1
in_3[30] => in_3[30].IN1
in_3[31] => in_3[31].IN1
in_4[0] => in_4[0].IN1
in_4[1] => in_4[1].IN1
in_4[2] => in_4[2].IN1
in_4[3] => in_4[3].IN1
in_4[4] => in_4[4].IN1
in_4[5] => in_4[5].IN1
in_4[6] => in_4[6].IN1
in_4[7] => in_4[7].IN1
in_4[8] => in_4[8].IN1
in_4[9] => in_4[9].IN1
in_4[10] => in_4[10].IN1
in_4[11] => in_4[11].IN1
in_4[12] => in_4[12].IN1
in_4[13] => in_4[13].IN1
in_4[14] => in_4[14].IN1
in_4[15] => in_4[15].IN1
in_4[16] => in_4[16].IN1
in_4[17] => in_4[17].IN1
in_4[18] => in_4[18].IN1
in_4[19] => in_4[19].IN1
in_4[20] => in_4[20].IN1
in_4[21] => in_4[21].IN1
in_4[22] => in_4[22].IN1
in_4[23] => in_4[23].IN1
in_4[24] => in_4[24].IN1
in_4[25] => in_4[25].IN1
in_4[26] => in_4[26].IN1
in_4[27] => in_4[27].IN1
in_4[28] => in_4[28].IN1
in_4[29] => in_4[29].IN1
in_4[30] => in_4[30].IN1
in_4[31] => in_4[31].IN1
in_5[0] => in_5[0].IN1
in_5[1] => in_5[1].IN1
in_5[2] => in_5[2].IN1
in_5[3] => in_5[3].IN1
in_5[4] => in_5[4].IN1
in_5[5] => in_5[5].IN1
in_5[6] => in_5[6].IN1
in_5[7] => in_5[7].IN1
in_5[8] => in_5[8].IN1
in_5[9] => in_5[9].IN1
in_5[10] => in_5[10].IN1
in_5[11] => in_5[11].IN1
in_5[12] => in_5[12].IN1
in_5[13] => in_5[13].IN1
in_5[14] => in_5[14].IN1
in_5[15] => in_5[15].IN1
in_5[16] => in_5[16].IN1
in_5[17] => in_5[17].IN1
in_5[18] => in_5[18].IN1
in_5[19] => in_5[19].IN1
in_5[20] => in_5[20].IN1
in_5[21] => in_5[21].IN1
in_5[22] => in_5[22].IN1
in_5[23] => in_5[23].IN1
in_5[24] => in_5[24].IN1
in_5[25] => in_5[25].IN1
in_5[26] => in_5[26].IN1
in_5[27] => in_5[27].IN1
in_5[28] => in_5[28].IN1
in_5[29] => in_5[29].IN1
in_5[30] => in_5[30].IN1
in_5[31] => in_5[31].IN1
in_6[0] => in_6[0].IN1
in_6[1] => in_6[1].IN1
in_6[2] => in_6[2].IN1
in_6[3] => in_6[3].IN1
in_6[4] => in_6[4].IN1
in_6[5] => in_6[5].IN1
in_6[6] => in_6[6].IN1
in_6[7] => in_6[7].IN1
in_6[8] => in_6[8].IN1
in_6[9] => in_6[9].IN1
in_6[10] => in_6[10].IN1
in_6[11] => in_6[11].IN1
in_6[12] => in_6[12].IN1
in_6[13] => in_6[13].IN1
in_6[14] => in_6[14].IN1
in_6[15] => in_6[15].IN1
in_6[16] => in_6[16].IN1
in_6[17] => in_6[17].IN1
in_6[18] => in_6[18].IN1
in_6[19] => in_6[19].IN1
in_6[20] => in_6[20].IN1
in_6[21] => in_6[21].IN1
in_6[22] => in_6[22].IN1
in_6[23] => in_6[23].IN1
in_6[24] => in_6[24].IN1
in_6[25] => in_6[25].IN1
in_6[26] => in_6[26].IN1
in_6[27] => in_6[27].IN1
in_6[28] => in_6[28].IN1
in_6[29] => in_6[29].IN1
in_6[30] => in_6[30].IN1
in_6[31] => in_6[31].IN1
in_7[0] => in_7[0].IN1
in_7[1] => in_7[1].IN1
in_7[2] => in_7[2].IN1
in_7[3] => in_7[3].IN1
in_7[4] => in_7[4].IN1
in_7[5] => in_7[5].IN1
in_7[6] => in_7[6].IN1
in_7[7] => in_7[7].IN1
in_7[8] => in_7[8].IN1
in_7[9] => in_7[9].IN1
in_7[10] => in_7[10].IN1
in_7[11] => in_7[11].IN1
in_7[12] => in_7[12].IN1
in_7[13] => in_7[13].IN1
in_7[14] => in_7[14].IN1
in_7[15] => in_7[15].IN1
in_7[16] => in_7[16].IN1
in_7[17] => in_7[17].IN1
in_7[18] => in_7[18].IN1
in_7[19] => in_7[19].IN1
in_7[20] => in_7[20].IN1
in_7[21] => in_7[21].IN1
in_7[22] => in_7[22].IN1
in_7[23] => in_7[23].IN1
in_7[24] => in_7[24].IN1
in_7[25] => in_7[25].IN1
in_7[26] => in_7[26].IN1
in_7[27] => in_7[27].IN1
in_7[28] => in_7[28].IN1
in_7[29] => in_7[29].IN1
in_7[30] => in_7[30].IN1
in_7[31] => in_7[31].IN1


|alu|mux_8x1_32bit:mux1|extend_to_32:ext1
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|mux_8x1_32bit:mux1|and_32bit:and3
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and3|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|extend_to_32:ext2
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|mux_8x1_32bit:mux1|and_32bit:and6
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and6|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|extend_to_32:ext3
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|mux_8x1_32bit:mux1|and_32bit:and9
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and9|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|extend_to_32:ext4
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|mux_8x1_32bit:mux1|and_32bit:and12
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and12|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|extend_to_32:ext5
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|mux_8x1_32bit:mux1|and_32bit:and15
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and15|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|extend_to_32:ext6
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|mux_8x1_32bit:mux1|and_32bit:and18
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and18|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|extend_to_32:ext7
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|mux_8x1_32bit:mux1|and_32bit:and21
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and21|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|extend_to_32:ext8
result[0] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[8] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[9] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[10] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[11] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[12] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[13] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[14] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[15] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[16] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[17] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[18] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[19] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[20] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[21] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[22] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[23] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[24] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[25] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[26] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[27] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[28] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[29] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[30] <= a.DB_MAX_OUTPUT_PORT_TYPE
result[31] <= a.DB_MAX_OUTPUT_PORT_TYPE
a => result[0].DATAIN
a => result[1].DATAIN
a => result[2].DATAIN
a => result[3].DATAIN
a => result[4].DATAIN
a => result[5].DATAIN
a => result[6].DATAIN
a => result[7].DATAIN
a => result[8].DATAIN
a => result[9].DATAIN
a => result[10].DATAIN
a => result[11].DATAIN
a => result[12].DATAIN
a => result[13].DATAIN
a => result[14].DATAIN
a => result[15].DATAIN
a => result[16].DATAIN
a => result[17].DATAIN
a => result[18].DATAIN
a => result[19].DATAIN
a => result[20].DATAIN
a => result[21].DATAIN
a => result[22].DATAIN
a => result[23].DATAIN
a => result[24].DATAIN
a => result[25].DATAIN
a => result[26].DATAIN
a => result[27].DATAIN
a => result[28].DATAIN
a => result[29].DATAIN
a => result[30].DATAIN
a => result[31].DATAIN


|alu|mux_8x1_32bit:mux1|and_32bit:and24
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|and_32bit:and24|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or1|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or2|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or3|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or4|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or5|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or6|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7
result[0] <= alu_1_bit:alu1.port0
result[1] <= alu_1_bit:alu2.port0
result[2] <= alu_1_bit:alu3.port0
result[3] <= alu_1_bit:alu4.port0
result[4] <= alu_1_bit:alu5.port0
result[5] <= alu_1_bit:alu6.port0
result[6] <= alu_1_bit:alu7.port0
result[7] <= alu_1_bit:alu8.port0
result[8] <= alu_1_bit:alu9.port0
result[9] <= alu_1_bit:alu10.port0
result[10] <= alu_1_bit:alu11.port0
result[11] <= alu_1_bit:alu12.port0
result[12] <= alu_1_bit:alu13.port0
result[13] <= alu_1_bit:alu14.port0
result[14] <= alu_1_bit:alu15.port0
result[15] <= alu_1_bit:alu16.port0
result[16] <= alu_1_bit:alu17.port0
result[17] <= alu_1_bit:alu18.port0
result[18] <= alu_1_bit:alu19.port0
result[19] <= alu_1_bit:alu20.port0
result[20] <= alu_1_bit:alu21.port0
result[21] <= alu_1_bit:alu22.port0
result[22] <= alu_1_bit:alu23.port0
result[23] <= alu_1_bit:alu24.port0
result[24] <= alu_1_bit:alu25.port0
result[25] <= alu_1_bit:alu26.port0
result[26] <= alu_1_bit:alu27.port0
result[27] <= alu_1_bit:alu28.port0
result[28] <= alu_1_bit:alu29.port0
result[29] <= alu_1_bit:alu30.port0
result[30] <= alu_1_bit:alu31.port0
result[31] <= alu_1_bit:alu32.port0
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu1
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu1|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu1|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu2
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu2|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu2|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu3
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu3|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu3|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu4
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu4|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu4|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu5
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu5|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu5|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu6
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu6|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu6|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu7
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu7|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu7|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu8
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu8|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu8|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu9
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu9|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu9|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu10
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu10|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu10|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu11
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu11|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu11|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu12
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu12|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu12|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu13
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu13|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu13|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu14
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu14|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu14|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu15
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu15|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu15|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu16
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu16|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu16|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu17
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu17|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu17|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu18
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu18|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu18|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu19
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu19|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu19|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu20
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu20|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu20|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu21
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu21|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu21|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu22
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu22|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu22|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu23
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu23|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu23|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu24
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu24|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu24|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu25
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu25|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu25|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu26
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu26|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu26|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu27
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu27|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu27|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu28
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu28|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu28|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu29
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu29|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu29|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu30
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu30|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu30|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu31
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu31|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu31|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu32
result <= mux_8x1_1bit:mux1.port0
cout <= full_adder:fa1.port1
a => a.IN1
b => xor2.IN1
less => input_arr[4].IN1
cin => cin.IN1
alu_op[0] => alu_op[0].IN1
alu_op[1] => alu_op[1].IN1
alu_op[2] => alu_op[2].IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu32|full_adder:fa1
s <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE
a => xor1.IN0
a => and1.IN0
b => xor1.IN1
b => and1.IN1
cin => xor2.IN1
cin => and2.IN1


|alu|mux_8x1_32bit:mux1|or_32bit:or7|alu_1_bit:alu32|mux_8x1_1bit:mux1
result <= or7.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => and4.IN0
sel[0] => and10.IN0
sel[0] => and16.IN0
sel[0] => and22.IN0
sel[0] => and1.IN0
sel[0] => and7.IN0
sel[0] => and13.IN0
sel[0] => and19.IN0
sel[1] => and7.IN1
sel[1] => and10.IN1
sel[1] => and19.IN1
sel[1] => and22.IN1
sel[1] => and1.IN1
sel[1] => and4.IN1
sel[1] => and13.IN1
sel[1] => and16.IN1
sel[2] => and14.IN1
sel[2] => and17.IN1
sel[2] => and20.IN1
sel[2] => and23.IN1
sel[2] => and2.IN1
sel[2] => and5.IN1
sel[2] => and8.IN1
sel[2] => and11.IN1
in[0] => and3.IN1
in[1] => and6.IN1
in[2] => and9.IN1
in[3] => and12.IN1
in[4] => and15.IN1
in[5] => and18.IN1
in[6] => and21.IN1
in[7] => and24.IN1


